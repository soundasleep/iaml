package org.openiaml.model.drools

#list any import classes here.
import org.eclipse.emf.ecore.*;
import org.openiaml.model.inference.*;
import org.openiaml.model.model.*;
import org.openiaml.model.model.impl.*;
import org.openiaml.model.model.wires.*;
import org.openiaml.model.model.visual.*;
import org.openiaml.model.model.operations.*;
import org.openiaml.model.model.domain.*;
import ca.ecliptical.emf.xpath.*;
import java.util.*;

#declare any global variables here
global EcoreCreateElementsHelper handler;

# insertion queue
import org.openiaml.model.drools.*;
global DroolsInsertionQueue queue;
global DroolsHelperFunctions functions;

# TODO can we put this function into something global?
function boolean connects(WireEdge wire, Object a, Object b) {
	return (wire.getFrom().equals(a) && wire.getTo().equals(b)) ||
		(wire.getFrom().equals(b) && wire.getTo().equals(a));
}

rule "Connect ConditionWires to RunInstanceWires created by SyncWires"
	when
		# we have a sync wire
		sw : SyncWire(overridden == false)
		source : ContainsEventTriggers( )
		target : ContainsOperations( )
		eval(functions.connects(sw, source, target))  
		
		# which has a run wire between event and operation (generated)
		event : EventTrigger( eContainer == source, name=="edit" )
		operation : Operation( eContainer == target, name=="update" )		
		run : RunInstanceWire( eContainer == sw, from == event, to == operation, name == "run" )
		
		# and the sync wire had a condition
		condition : Condition ( )
		sourceCw : ConditionWire( from == condition, to == sw )
		
		# but our run wire doesn't 
		not (ConditionWire (from == condition, to == run )) 
		
	then
		# copy the condition
		ConditionWire cw = handler.generatedConditionWire( sourceCw, sourceCw, condition, run );
		handler.setName(cw, "copied condition: " + sourceCw.getId());
		queue.add(cw, drools);

end

rule "Connect ParameterWires to ConditionWires connected to RunInstanceWires created by SyncWires"
	when
		# we have a syncwire
		sw : SyncWire(overridden == false)
		source : ContainsEventTriggers( )
		target : ContainsOperations( )
		eval(functions.connects(sw, source, target))  
		
		# that has created a RunInstanceWire
		event : EventTrigger( eContainer == source, name=="edit" )
		operation : Operation( eContainer == target, name=="update" )
		run : RunInstanceWire( eContainer == sw, from == event, to == operation, name == "run" )

		# and this SyncWire has a condition
		condition : Condition ( )
		sourceCw : ConditionWire( from == condition, to == sw )
		
		# and the RunInstanceWire has the same condition 
		targetCw : ConditionWire (from == condition, to == run ) 
		
		# and the SyncWire had a parameter
		param : WireEdgesSource ( )
		paramWire : ParameterWire( from == param, to == sourceCw )

		# but this wire does not have it
		not (ParameterWire (from == param, to == targetCw ))
		
	then
		ParameterWire pw = handler.generatedParameterWire( sourceCw, sourceCw, param, targetCw );
		//cw.setName("copied parameter: " + paramWire.getName());
		handler.setName(pw, "[conditions] sync from: " + paramWire.getId() + " param=" + ((GeneratedElement) param).getId() + " run=" + run.getId() );
		queue.add(pw, drools);

end

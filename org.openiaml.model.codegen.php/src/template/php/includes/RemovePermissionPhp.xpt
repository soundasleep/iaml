«IMPORT iaml»

«EXTENSION template::GeneratorExtensions»

«DEFINE removePermissionPhp FOR model::InternetApplication-»
<?php
/**
 * Remove a permission to a given user instance.
 */
 
«EXPAND template::Template::commonHeader("")»

«EXPAND template::domain::Definitions::domainDefinitions»
«EXPAND template::users::Includes::getInclude FOREACH eAllContents.typeSelect(model::users::Role)-»

log_message("remove_permission.php? " . print_r($_GET, true));
$permission_id = require_get("permission_id");
$instance_id = require_get("instance_id");

log_message("remove_permission.php: removing permission_id=$permission_id, instance_id=$instance_id");

// need to resolve a user instance type from a given instance ID
«FOREACH eAllContents.typeSelect(model::users::UserInstance) AS user»
	if ($instance_id == '«safeNameString(user.id)-»') {
	«IF !user.inWires.typeSelect(model::wires::SelectWire).from.typeSelect(model::users::Role).isEmpty»
		$user_instance_type = '«safeName(user.inWires.typeSelect(model::wires::SelectWire).from.typeSelect(model::users::Role).first())»';
	«ELSE»
		«IF !user.inWires.typeSelect(model::wires::NewInstanceWire).from.typeSelect(model::users::Role).isEmpty»
			$user_instance_type = '«safeName(user.inWires.typeSelect(model::wires::NewInstanceWire).from.typeSelect(model::users::Role).first())»';
		«ELSE»
			// no DomainObject source for '«safeNameString(user.id)»'
		«ENDIF»
	«ENDIF»
	}
«ENDFOREACH»

// TODO probably a security risk
$function_name = 'get_object_instance_' . $instance_id;
log_message("remove_permission.php: calling $function_name");
$instance = $function_name();

// TODO probably a security risk
$function_name = 'remove_permission_' . $permission_id . '_from_' . $user_instance_type;
log_message("remove_permission.php: calling $function_name");
$instance = $function_name($instance);

// output any instructions
echo "ok";
echo_necessary_update_callbacks();

«ENDDEFINE»

package iaml.generated2;

import nz.org.take.rt.*;


/**
 * Interface generated by the take compiler.
 * @version Wed Oct 15 15:05:06 NZDT 2008
 */
@SuppressWarnings("unchecked")
public interface KBInterface {
    /**
     * Method generated for query /app_name[in,out]
     * @param app input parameter generated from slot 0
     * @return an iterator for instances of InternetApplication_Name
    */
    public ResultSet<InternetApplication_Name> getAppName(
        final org.openiaml.model.model.InternetApplication app);

    /**
     * Method generated for query /generated_app_children[in,out]
     * @param app input parameter generated from slot 0
     * @return an iterator for instances of GeneratedAppChildren
    */
    public ResultSet<GeneratedAppChildren> getApplicationChildren(
        final org.openiaml.model.model.InternetApplication app);

    /**
     * Method generated for query /test_from_external[in,out]
     * @param app input parameter generated from slot 0
     * @return an iterator for instances of TestFromExternal
    */
    public ResultSet<TestFromExternal> getTestFromExternal(
        final org.openiaml.model.model.InternetApplication app);

    /**
     * Method generated for query /b[in]
     * @param app input parameter generated from slot 0
     * @return an iterator for instances of TestQueryB
    */
    public ResultSet<TestQueryB> getTestQueryB(
        final org.openiaml.model.model.InternetApplication app);

    /**
    * Method that can be used to query annotations at runtime.
    * @param id the id of the rule (or other knowledge element)
    * @return a map of annotations (string-string mappings)
    * code generated using velocity template LocalAnnotationMethod.vm
    */
    public java.util.Map<String, String> getAnnotations(String id);

    /**
     * Method that can be used to query global annotations at runtime.
     * Global annotations are attached to the knowledge base, not to
     * a particular element (rule,..).
     * @return a map of annotations (string-string mappings)
     * code generated using velocity template GlobalAnnotationMethod.vm
    */
    public java.util.Map<String, String> getAnnotations();
}

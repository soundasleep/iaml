/**
 * Add a isGenerated "/derived" property to all GeneratedElements that
 * are generated.
 *
 * ALSO: Disable resetting font colours (from user preferences, etc)
 * From http://dev.eclipse.org/newslists/news.eclipse.modeling.gmf/msg16145.html
 *
 */
«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«EXTENSION xpt::diagram::ViewmapAttributesUtils»

/**
 * We have to redefine the entire command, because there are no
 * extension points which we can use.
 */
«AROUND getLabelText FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment»
	protected String getLabelText() {
		String text = null;
		org.eclipse.emf.ecore.EObject parserElement = getParserElement();
		if (parserElement != null && getParser() != null) {
			text = getParser().getPrintString(
				new org.eclipse.gmf.runtime.emf.core.util.EObjectAdapter(parserElement),
				getParserOptions().intValue());
		}
		if (text == null || text.length() == 0) {
			text = defaultText;
		}
		
		// Jevon addition: add "/derived" text
		if (getParserElement() instanceof org.openiaml.model.model.GeneratedElement) {
			if (((org.openiaml.model.model.GeneratedElement) getParserElement()).isIsGenerated()) {
				text = "/" + text;
			}
		}		
		
		return text;
	}
«ENDAROUND»

«AROUND setFontColor FOR gmfgen::GenCommonBase-»
	«EXPAND xpt::Common::generatedMemberComment("Jevon: Disable refreshing the font color.")»
	protected void setFontColor(org.eclipse.swt.graphics.Color color) {
		// some weird logic: if we can edit this field, then
		// we should be able to change its color. (makes some sense?)
		// NOTE: this also means all editable fields will be black by default.
		if (isEditable())
			getFigure().setForegroundColor(color);
	}
«ENDAROUND»


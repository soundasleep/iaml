«IMPORT iaml»

/**
 * Runtime checks of conditions.
 */
«EXTENSION template::GeneratorExtensions»

«DEFINE callCondition(Boolean php, Boolean inStoreDb) FOR model::ComplexTerm»
	«throwException("Runtime implementation of a generic ComplexTerm has not been implemented: " + this)»
«ENDDEFINE»

«DEFINE callCondition(Boolean php, Boolean inStoreDb) FOR model::SimpleCondition»
	«EXPAND functionCall(php, inStoreDb, this) FOR function»
«ENDDEFINE»

«DEFINE functionCall(Boolean php, Boolean inStoreDb, model::SimpleCondition edge) FOR model::Function»
	/* '«simpleName()»' */
	condition_«conditionName()»(
		«EXPAND template::operations::Parameters::callParameter(php, inStoreDb, false) FOREACH edge.inParameterEdges SEPARATOR ", "»
	)
«ENDDEFINE»

«DEFINE functionCall(Boolean php, Boolean inStoreDb, model::SimpleCondition edge) FOR model::XQueryFunction»
	/* xquery function '«simpleName()»' */
	xquery_function_callback(
		'«func»'
		«IF !edge.inParameterEdges.isEmpty»,«ENDIF»
		«EXPAND template::operations::Parameters::callParameter(php, inStoreDb, false) FOREACH edge.inParameterEdges SEPARATOR ", "»
	)
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»

<?xml version="1.0" encoding="UTF-8"?><gmfgen:GenEditorGenerator xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" diagramFileExtension="iaml_domain_store_diagram" domainFileExtension="iaml_domain_store" dynamicTemplates="true" modelID="Iaml_DomainStore" packageNamePrefix="org.openiaml.model.diagram.domain_store" templateDirectory="/org.openiaml.model/templates/" xmi:version="2.0">
  <diagram canonicalEditPolicyClassName="DomainStoreCanonicalEditPolicy" editPartClassName="DomainStoreEditPart" iconProviderPriority="Low" itemSemanticEditPolicyClassName="DomainStoreItemSemanticEditPolicy" validationDecorators="true" validationEnabled="true" validationProviderPriority="Low" visualID="1000">
    <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType editHelperClassName="DomainStoreEditHelper" xsi:type="gmfgen:MetamodelType"/>
    <viewmap figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer" xsi:type="gmfgen:FigureViewmap"/>
    <containsShortcutsTo>iaml_domain_object_instance</containsShortcutsTo>
    <containsShortcutsTo>iaml</containsShortcutsTo>
    <containsShortcutsTo>iaml_condition</containsShortcutsTo>
    <containsShortcutsTo>iaml_wire</containsShortcutsTo>
    <containsShortcutsTo>iaml_element</containsShortcutsTo>
    <containsShortcutsTo>iaml_domain_store</containsShortcutsTo>
    <containsShortcutsTo>iaml_operation</containsShortcutsTo>
    <containsShortcutsTo>iaml_visual</containsShortcutsTo>
    <containsShortcutsTo>iaml_user_store</containsShortcutsTo>
    <containsShortcutsTo>iaml_domain_object</containsShortcutsTo>
    <containsShortcutsTo>iaml_session</containsShortcutsTo>
    <containsShortcutsTo>iaml_frame</containsShortcutsTo>
    <containsShortcutsTo>iaml_email</containsShortcutsTo>
        <shortcutsProvidedFor>iaml_domain_object_instance</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_condition</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_wire</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_element</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_domain_store</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_operation</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_visual</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_user_store</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_domain_object</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_session</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_frame</shortcutsProvidedFor>
    <shortcutsProvidedFor>iaml_email</shortcutsProvidedFor>
    <domainDiagramElement href="iaml.genmodel#//model/DomainStore"/>
    <topLevelNodes canonicalEditPolicyClassName="CompositeOperationCanonicalEditPolicy" createCommandClassName="CompositeOperationCreateCommand" editPartClassName="CompositeOperationEditPart" graphicalNodeEditPolicyClassName="CompositeOperationGraphicalNodeEditPolicy" itemSemanticEditPolicyClassName="CompositeOperationItemSemanticEditPolicy" notationViewFactoryClassName="CompositeOperationViewFactory" visualID="2016">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType editHelperClassName="CompositeOperationEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class CompositeOperationFigure extends org.eclipse.draw2d.RoundedRectangle {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeOperationNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureCompositeOperationParentNameFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public CompositeOperationFigure() {&#10;&#9;&#9;&#10;&#9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#10;&#9;layoutThis.setStretchMinorAxis(false);&#10;&#9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#10;&#9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#9;layoutThis.setMajorSpacing(5);&#10;&#9;layoutThis.setMinorSpacing(5);&#10;&#9;layoutThis.setHorizontal(false);&#10;&#10;&#9;this.setLayoutManager(layoutThis);&#10;&#10;&#9;&#9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#10;, getMapMode().DPtoLP(8)&#10;));&#10;this.setLineWidth(1);&#10;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#10;&#9;this.setBackgroundColor(THIS_BACK&#10;);&#10;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;));&#10;&#9;&#9;createContents();&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigureCompositeOperationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureCompositeOperationNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigureCompositeOperationNameFigure);&#10;&#10;&#10;&#10;fFigureCompositeOperationParentNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureCompositeOperationParentNameFigure.setText(&quot;[none]&quot;);&#10;&#9;fFigureCompositeOperationParentNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.gray);&#10;&#10;this.add(fFigureCompositeOperationParentNameFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private boolean myUseLocalCoordinates = false;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected boolean useLocalCoordinates() {&#10;&#9;&#9;return myUseLocalCoordinates;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#10;&#9;&#9;myUseLocalCoordinates = useLocalCoordinates;&#10;&#9;}&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeOperationNameFigure() {&#10;&#9;&#9;return fFigureCompositeOperationNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureCompositeOperationParentNameFigure() {&#10;&#9;&#9;return fFigureCompositeOperationParentNameFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;/**&#10; * @generated&#10; */&#10;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 240, 240, 240);&#10;&#10;" className="CompositeOperationFigure" layoutType="FLOW_LAYOUT" xsi:type="gmfgen:InnerClassViewmap">
        <attributes fixedBackground="true" xsi:type="gmfgen:StyleAttributes"/>
      </viewmap>
      <modelFacet modelElementSelector="//@expressionProviders/@providers.0/@expressions.0">
        <metaClass href="iaml.genmodel#//model/CompositeOperation"/>
        <containmentMetaFeature href="iaml.genmodel#//model/ContainsOperations/operations"/>
        <childMetaFeature href="iaml.genmodel#//model/ContainsOperations/operations"/>
      </modelFacet>
      <labels editPartClassName="CompositeOperationNameEditPart" elementIcon="true" itemSemanticEditPolicyClassName="CompositeOperationNameItemSemanticEditPolicy" notationViewFactoryClassName="CompositeOperationNameViewFactory" visualID="5039">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureCompositeOperationNameFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="WrappingLabelEditPart" itemSemanticEditPolicyClassName="WrappingLabelItemSemanticEditPolicy" notationViewFactoryClassName="CompositeOperationLabelViewFactory" readOnly="true" visualID="5040">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureCompositeOperationParentNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      <behaviour diagramKind="Iaml_Operation" editPolicyClassName="OperationOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.operation.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</labels>
    <behaviour diagramKind="Iaml_Operation" editPolicyClassName="OperationOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.operation.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</topLevelNodes>
    <topLevelNodes canonicalEditPolicyClassName="DomainObjectCanonicalEditPolicy" createCommandClassName="DomainObjectCreateCommand" editPartClassName="DomainObjectEditPart" graphicalNodeEditPolicyClassName="DomainObjectGraphicalNodeEditPolicy" itemSemanticEditPolicyClassName="DomainObjectItemSemanticEditPolicy" notationViewFactoryClassName="DomainObjectViewFactory" visualID="2017">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType editHelperClassName="DomainObjectEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class DomainObjectFigure extends org.eclipse.draw2d.RectangleFigure {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDomainObjectNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDomainObjectParentNameFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public DomainObjectFigure() {&#10;&#9;&#9;&#10;&#9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#10;&#9;layoutThis.setStretchMinorAxis(false);&#10;&#9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#10;&#9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#9;layoutThis.setMajorSpacing(5);&#10;&#9;layoutThis.setMinorSpacing(5);&#10;&#9;layoutThis.setHorizontal(false);&#10;&#10;&#9;this.setLayoutManager(layoutThis);&#10;&#10;&#9;&#9;this.setLineWidth(2);&#10;&#10;this.setFont(THIS_FONT);&#10;&#10;&#10;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(4)&#10;, getMapMode().DPtoLP(4)&#10;, getMapMode().DPtoLP(4)&#10;, getMapMode().DPtoLP(4)&#10;));&#10;&#9;&#9;createContents();&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigureDomainObjectNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureDomainObjectNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigureDomainObjectNameFigure);&#10;&#10;&#10;&#10;fFigureDomainObjectParentNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureDomainObjectParentNameFigure.setText(&quot;[none]&quot;);&#10;&#9;fFigureDomainObjectParentNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.gray);&#10;&#10;this.add(fFigureDomainObjectParentNameFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private boolean myUseLocalCoordinates = false;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected boolean useLocalCoordinates() {&#10;&#9;&#9;return myUseLocalCoordinates;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#10;&#9;&#9;myUseLocalCoordinates = useLocalCoordinates;&#10;&#9;}&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDomainObjectNameFigure() {&#10;&#9;&#9;return fFigureDomainObjectNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDomainObjectParentNameFigure() {&#10;&#9;&#9;return fFigureDomainObjectParentNameFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;/**&#10; * @generated&#10; */&#10;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;Arial&quot;, 9, org.eclipse.swt.SWT.BOLD);&#10;&#10;" className="DomainObjectFigure" layoutType="FLOW_LAYOUT" xsi:type="gmfgen:InnerClassViewmap">
        <attributes fixedFont="true" xsi:type="gmfgen:StyleAttributes"/>
      </viewmap>
      <modelFacet modelElementSelector="//@expressionProviders/@providers.0/@expressions.1">
        <metaClass href="iaml.genmodel#//model/DomainObject"/>
        <containmentMetaFeature href="iaml.genmodel#//model/DomainStore/children"/>
        <childMetaFeature href="iaml.genmodel#//model/DomainStore/children"/>
      </modelFacet>
      <labels editPartClassName="DomainObjectNameEditPart" elementIcon="true" itemSemanticEditPolicyClassName="DomainObjectNameItemSemanticEditPolicy" notationViewFactoryClassName="DomainObjectNameViewFactory" visualID="5041">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureDomainObjectNameFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="WrappingLabel2EditPart" itemSemanticEditPolicyClassName="WrappingLabel2ItemSemanticEditPolicy" notationViewFactoryClassName="DomainObjectLabelViewFactory" readOnly="true" visualID="5042">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureDomainObjectParentNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      <behaviour diagramKind="Iaml_DomainObject" editPolicyClassName="DomainObjectOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.domain_object.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</labels>
    <behaviour diagramKind="Iaml_DomainObject" editPolicyClassName="DomainObjectOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.domain_object.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</topLevelNodes>
    <topLevelNodes canonicalEditPolicyClassName="EventTriggerCanonicalEditPolicy" createCommandClassName="EventTriggerCreateCommand" editPartClassName="EventTriggerEditPart" graphicalNodeEditPolicyClassName="EventTriggerGraphicalNodeEditPolicy" itemSemanticEditPolicyClassName="EventTriggerItemSemanticEditPolicy" notationViewFactoryClassName="EventTriggerViewFactory" visualID="2018">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType editHelperClassName="EventTriggerEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class EventTriggerFigure extends org.eclipse.draw2d.Shape {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEventTriggerContainmentFeatureFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEventTriggerNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureEventTriggerParentNameFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public EventTriggerFigure() {&#10;&#9;&#9;&#10;&#9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#10;&#9;layoutThis.setStretchMinorAxis(false);&#10;&#9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#10;&#9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#9;layoutThis.setMajorSpacing(5);&#10;&#9;layoutThis.setMinorSpacing(5);&#10;&#9;layoutThis.setHorizontal(false);&#10;&#10;&#9;this.setLayoutManager(layoutThis);&#10;&#10;&#9;&#9;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#10;, getMapMode().DPtoLP(0)&#10;));&#10;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#10;, getMapMode().DPtoLP(0)&#10;));&#10;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(80)&#10;, getMapMode().DPtoLP(20)&#10;));&#10;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(60)&#10;, getMapMode().DPtoLP(40)&#10;));&#10;this.addPoint(new org.eclipse.draw2d.geometry.Point(getMapMode().DPtoLP(0)&#10;, getMapMode().DPtoLP(40)&#10;));&#10;this.setFill(true);&#10;this.setLineWidth(1);&#10;&#9;this.setBackgroundColor(THIS_BACK&#10;);&#10;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;));&#10;&#9;&#9;createContents();&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigureEventTriggerContainmentFeatureFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureEventTriggerContainmentFeatureFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#9;fFigureEventTriggerContainmentFeatureFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.darkBlue);&#10;&#10;fFigureEventTriggerContainmentFeatureFigure.setFont(FFIGUREEVENTTRIGGERCONTAINMENTFEATUREFIGURE_FONT);&#10;&#10;&#10;&#10;this.add(fFigureEventTriggerContainmentFeatureFigure);&#10;&#10;&#10;&#10;fFigureEventTriggerNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureEventTriggerNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigureEventTriggerNameFigure);&#10;&#10;&#10;&#10;fFigureEventTriggerParentNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureEventTriggerParentNameFigure.setText(&quot;[none]&quot;);&#10;&#9;fFigureEventTriggerParentNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.gray);&#10;&#10;this.add(fFigureEventTriggerParentNameFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private final org.eclipse.draw2d.geometry.PointList myTemplate = new org.eclipse.draw2d.geometry.PointList();&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.draw2d.geometry.Rectangle myTemplateBounds;&#10;&#9;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public void addPoint(org.eclipse.draw2d.geometry.Point point){&#10;&#9;&#9;myTemplate.addPoint(point);&#10;&#9;&#9;myTemplateBounds = null;&#10;&#9;}&#10;&#9;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void fillShape(org.eclipse.draw2d.Graphics graphics) {&#10;&#9;&#9;org.eclipse.draw2d.geometry.Rectangle bounds = getBounds();&#10;&#9;&#9;graphics.pushState();&#10;&#9;&#9;graphics.translate(bounds.x, bounds.y);&#10;&#9;&#9;graphics.fillPolygon(scalePointList());&#10;&#9;&#9;graphics.popState();&#10;&#9;}&#10;&#9;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void outlineShape(org.eclipse.draw2d.Graphics graphics) {&#10;&#9;&#9;org.eclipse.draw2d.geometry.Rectangle bounds = getBounds();&#10;&#9;&#9;graphics.pushState();&#10;&#9;&#9;graphics.translate(bounds.x, bounds.y);&#10;&#9;&#9;graphics.drawPolygon(scalePointList());&#10;&#9;&#9;graphics.popState();&#10;&#9;}&#10;&#9;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.draw2d.geometry.Rectangle getTemplateBounds(){&#10;&#9;&#9;if (myTemplateBounds == null){&#10;&#9;&#9;&#9;myTemplateBounds = myTemplate.getBounds().getCopy().union(0, 0);&#10;&#9;&#9;&#9;//just safety -- we are going to use this as divider &#10;&#9;&#9;&#9;if (myTemplateBounds.width &lt; 1){&#10;&#9;&#9;&#9;&#9;myTemplateBounds.width = 1;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (myTemplateBounds.height &lt; 1){&#10;&#9;&#9;&#9;&#9;myTemplateBounds.height = 1;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;return myTemplateBounds;&#10;&#9;}&#10;&#9;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private int[] scalePointList() {&#10;&#9;&#9;org.eclipse.draw2d.geometry.Rectangle pointsBounds = getTemplateBounds();&#10;&#9;&#9;org.eclipse.draw2d.geometry.Rectangle actualBounds = getBounds();&#10;&#10;&#9;&#9;float xScale = ((float) actualBounds.width) / pointsBounds.width;&#10;&#9;&#9;float yScale = ((float) actualBounds.height) / pointsBounds.height;&#10;&#10;&#9;&#9;if (xScale == 1 &amp;&amp; yScale == 1) {&#10;&#9;&#9;&#9;return myTemplate.toIntArray();&#10;&#9;&#9;}&#10;&#9;&#9;int[] scaled = (int[]) myTemplate.toIntArray().clone();&#10;&#9;&#9;for (int i = 0; i &lt; scaled.length; i += 2) {&#10;&#9;&#9;&#9;scaled[i] = (int) Math.floor(scaled[i] * xScale);&#10;&#9;&#9;&#9;scaled[i + 1] = (int) Math.floor(scaled[i + 1] * yScale);&#10;&#9;&#9;}&#10;&#9;&#9;return scaled;&#10;&#9;}&#10;&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEventTriggerContainmentFeatureFigure() {&#10;&#9;&#9;return fFigureEventTriggerContainmentFeatureFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEventTriggerNameFigure() {&#10;&#9;&#9;return fFigureEventTriggerNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureEventTriggerParentNameFigure() {&#10;&#9;&#9;return fFigureEventTriggerParentNameFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;/**&#10; * @generated&#10; */&#10;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 247, 221, 238);&#10;&#10;/**&#10; * @generated&#10; */&#10;static final org.eclipse.swt.graphics.Font FFIGUREEVENTTRIGGERCONTAINMENTFEATUREFIGURE_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), org.eclipse.swt.widgets.Display.getDefault().getSystemFont().getFontData()[0].getName(), 9, org.eclipse.swt.SWT.BOLD);&#10;&#10;" className="EventTriggerFigure" layoutType="FLOW_LAYOUT" xsi:type="gmfgen:InnerClassViewmap">
        <attributes fixedBackground="true" xsi:type="gmfgen:StyleAttributes"/>
      </viewmap>
      <modelFacet>
        <metaClass href="iaml.genmodel#//model/EventTrigger"/>
      </modelFacet>
      <labels editPartClassName="WrappingLabel3EditPart" elementIcon="true" itemSemanticEditPolicyClassName="WrappingLabel3ItemSemanticEditPolicy" notationViewFactoryClassName="EventTriggerLabelViewFactory" readOnly="true" visualID="5043">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureEventTriggerContainmentFeatureFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedFont="true" fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      </labels>
      <labels editPartClassName="EventTriggerNameEditPart" itemSemanticEditPolicyClassName="EventTriggerNameItemSemanticEditPolicy" notationViewFactoryClassName="EventTriggerNameViewFactory" visualID="5044">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureEventTriggerNameFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="WrappingLabel4EditPart" itemSemanticEditPolicyClassName="WrappingLabel4ItemSemanticEditPolicy" notationViewFactoryClassName="EventTriggerLabelViewFactory" readOnly="true" visualID="5045">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureEventTriggerParentNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      </labels>
    </topLevelNodes>
    <topLevelNodes canonicalEditPolicyClassName="PropertyCanonicalEditPolicy" createCommandClassName="PropertyCreateCommand" editPartClassName="PropertyEditPart" graphicalNodeEditPolicyClassName="PropertyGraphicalNodeEditPolicy" itemSemanticEditPolicyClassName="PropertyItemSemanticEditPolicy" notationViewFactoryClassName="PropertyViewFactory" visualID="2019">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType editHelperClassName="PropertyEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class PropertyFigure extends org.eclipse.draw2d.RectangleFigure {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePropertyNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePropertyDefaultValueFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePropertyParentNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePropertyTypeFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public PropertyFigure() {&#10;&#9;&#9;&#10;&#9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#10;&#9;layoutThis.setStretchMinorAxis(false);&#10;&#9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#10;&#9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#9;layoutThis.setMajorSpacing(5);&#10;&#9;layoutThis.setMinorSpacing(5);&#10;&#9;layoutThis.setHorizontal(false);&#10;&#10;&#9;this.setLayoutManager(layoutThis);&#10;&#10;&#9;&#9;this.setLineWidth(1);&#10;&#9;this.setBackgroundColor(THIS_BACK&#10;);&#10;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;));&#10;&#9;&#9;createContents();&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigurePropertyNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigurePropertyNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigurePropertyNameFigure);&#10;&#10;&#10;&#10;fFigurePropertyDefaultValueFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigurePropertyDefaultValueFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigurePropertyDefaultValueFigure);&#10;&#10;&#10;&#10;fFigurePropertyParentNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigurePropertyParentNameFigure.setText(&quot;[none]&quot;);&#10;&#9;fFigurePropertyParentNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.gray);&#10;&#10;this.add(fFigurePropertyParentNameFigure);&#10;&#10;&#10;&#10;fFigurePropertyTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigurePropertyTypeFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#9;fFigurePropertyTypeFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#10;&#10;this.add(fFigurePropertyTypeFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private boolean myUseLocalCoordinates = false;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected boolean useLocalCoordinates() {&#10;&#9;&#9;return myUseLocalCoordinates;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#10;&#9;&#9;myUseLocalCoordinates = useLocalCoordinates;&#10;&#9;}&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePropertyNameFigure() {&#10;&#9;&#9;return fFigurePropertyNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePropertyDefaultValueFigure() {&#10;&#9;&#9;return fFigurePropertyDefaultValueFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePropertyParentNameFigure() {&#10;&#9;&#9;return fFigurePropertyParentNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePropertyTypeFigure() {&#10;&#9;&#9;return fFigurePropertyTypeFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;/**&#10; * @generated&#10; */&#10;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 208, 185, 243);&#10;&#10;" className="PropertyFigure" layoutType="FLOW_LAYOUT" xsi:type="gmfgen:InnerClassViewmap">
        <attributes fixedBackground="true" xsi:type="gmfgen:StyleAttributes"/>
      </viewmap>
      <modelFacet>
        <metaClass href="iaml.genmodel#//model/Property"/>
        <containmentMetaFeature href="iaml.genmodel#//model/ContainsProperties/properties"/>
        <childMetaFeature href="iaml.genmodel#//model/ContainsProperties/properties"/>
      </modelFacet>
      <labels editPartClassName="PropertyNameEditPart" elementIcon="true" itemSemanticEditPolicyClassName="PropertyNameItemSemanticEditPolicy" notationViewFactoryClassName="PropertyNameViewFactory" visualID="5046">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigurePropertyNameFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="PropertyDefaultValueEditPart" itemSemanticEditPolicyClassName="PropertyDefaultValueItemSemanticEditPolicy" notationViewFactoryClassName="PropertyDefaultValueViewFactory" visualID="5047">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigurePropertyDefaultValueFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet editPattern="{0}" parser="//@labelParsers/@implementations.0" viewPattern="default: {0}" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/Property/defaultValue"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="WrappingLabel5EditPart" itemSemanticEditPolicyClassName="WrappingLabel5ItemSemanticEditPolicy" notationViewFactoryClassName="PropertyLabelViewFactory" readOnly="true" visualID="5048">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigurePropertyParentNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      </labels>
      <labels editPartClassName="WrappingLabel6EditPart" itemSemanticEditPolicyClassName="WrappingLabel6ItemSemanticEditPolicy" notationViewFactoryClassName="PropertyLabelViewFactory" readOnly="true" visualID="5049">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigurePropertyTypeFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      </labels>
    </topLevelNodes>
    <topLevelNodes canonicalEditPolicyClassName="PrimitiveOperationCanonicalEditPolicy" createCommandClassName="PrimitiveOperationCreateCommand" editPartClassName="PrimitiveOperationEditPart" graphicalNodeEditPolicyClassName="PrimitiveOperationGraphicalNodeEditPolicy" itemSemanticEditPolicyClassName="PrimitiveOperationItemSemanticEditPolicy" notationViewFactoryClassName="PrimitiveOperationViewFactory" visualID="2020">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType editHelperClassName="PrimitiveOperationEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class PrimitiveOperationFigure extends org.eclipse.draw2d.RoundedRectangle {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePrimitiveOperationNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigurePrimitiveOperationParentNameFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public PrimitiveOperationFigure() {&#10;&#9;&#9;&#10;&#9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#10;&#9;layoutThis.setStretchMinorAxis(false);&#10;&#9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#10;&#9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#9;layoutThis.setMajorSpacing(5);&#10;&#9;layoutThis.setMinorSpacing(5);&#10;&#9;layoutThis.setHorizontal(false);&#10;&#10;&#9;this.setLayoutManager(layoutThis);&#10;&#10;&#9;&#9;this.setCornerDimensions(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(8)&#10;, getMapMode().DPtoLP(8)&#10;));&#10;this.setLineWidth(1);&#10;&#9;this.setBackgroundColor(THIS_BACK&#10;);&#10;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;));&#10;&#9;&#9;createContents();&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigurePrimitiveOperationNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigurePrimitiveOperationNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigurePrimitiveOperationNameFigure);&#10;&#10;&#10;&#10;fFigurePrimitiveOperationParentNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigurePrimitiveOperationParentNameFigure.setText(&quot;[none]&quot;);&#10;&#9;fFigurePrimitiveOperationParentNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.gray);&#10;&#10;this.add(fFigurePrimitiveOperationParentNameFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private boolean myUseLocalCoordinates = false;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected boolean useLocalCoordinates() {&#10;&#9;&#9;return myUseLocalCoordinates;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#10;&#9;&#9;myUseLocalCoordinates = useLocalCoordinates;&#10;&#9;}&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePrimitiveOperationNameFigure() {&#10;&#9;&#9;return fFigurePrimitiveOperationNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigurePrimitiveOperationParentNameFigure() {&#10;&#9;&#9;return fFigurePrimitiveOperationParentNameFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;/**&#10; * @generated&#10; */&#10;static final org.eclipse.swt.graphics.Color THIS_BACK = new org.eclipse.swt.graphics.Color(null, 240, 240, 240);&#10;&#10;" className="PrimitiveOperationFigure" layoutType="FLOW_LAYOUT" xsi:type="gmfgen:InnerClassViewmap">
        <attributes fixedBackground="true" xsi:type="gmfgen:StyleAttributes"/>
      </viewmap>
      <modelFacet modelElementSelector="//@expressionProviders/@providers.0/@expressions.2">
        <metaClass href="iaml.genmodel#//model/PrimitiveOperation"/>
        <containmentMetaFeature href="iaml.genmodel#//model/ContainsOperations/operations"/>
        <childMetaFeature href="iaml.genmodel#//model/ContainsOperations/operations"/>
      </modelFacet>
      <labels editPartClassName="PrimitiveOperationNameEditPart" elementIcon="true" itemSemanticEditPolicyClassName="PrimitiveOperationNameItemSemanticEditPolicy" notationViewFactoryClassName="PrimitiveOperationNameViewFactory" visualID="5050">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigurePrimitiveOperationNameFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="WrappingLabel8EditPart" itemSemanticEditPolicyClassName="WrappingLabel8ItemSemanticEditPolicy" notationViewFactoryClassName="PrimitiveOperationLabelViewFactory" readOnly="true" visualID="5051">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigurePrimitiveOperationParentNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      </labels>
    </topLevelNodes>
    <topLevelNodes canonicalEditPolicyClassName="DomainAttributeCanonicalEditPolicy" createCommandClassName="DomainAttributeCreateCommand" editPartClassName="DomainAttributeEditPart" graphicalNodeEditPolicyClassName="DomainAttributeGraphicalNodeEditPolicy" itemSemanticEditPolicyClassName="DomainAttributeItemSemanticEditPolicy" notationViewFactoryClassName="DomainAttributeViewFactory" visualID="2021">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType editHelperClassName="DomainAttributeEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class DomainAttributeFigure extends org.eclipse.draw2d.RectangleFigure {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDomainAttributeNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDomainAttributeParentNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureDomainAttributeTypeFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public DomainAttributeFigure() {&#10;&#9;&#9;&#10;&#9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#10;&#9;layoutThis.setStretchMinorAxis(false);&#10;&#9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#10;&#9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#9;layoutThis.setMajorSpacing(5);&#10;&#9;layoutThis.setMinorSpacing(5);&#10;&#9;layoutThis.setHorizontal(false);&#10;&#10;&#9;this.setLayoutManager(layoutThis);&#10;&#10;&#9;&#9;this.setLineWidth(1);&#10;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;, getMapMode().DPtoLP(3)&#10;));&#10;&#9;&#9;createContents();&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigureDomainAttributeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureDomainAttributeNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigureDomainAttributeNameFigure);&#10;&#10;&#10;&#10;fFigureDomainAttributeParentNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureDomainAttributeParentNameFigure.setText(&quot;[none]&quot;);&#10;&#9;fFigureDomainAttributeParentNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.gray);&#10;&#10;this.add(fFigureDomainAttributeParentNameFigure);&#10;&#10;&#10;&#10;fFigureDomainAttributeTypeFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureDomainAttributeTypeFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#9;fFigureDomainAttributeTypeFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#10;&#10;this.add(fFigureDomainAttributeTypeFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private boolean myUseLocalCoordinates = false;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected boolean useLocalCoordinates() {&#10;&#9;&#9;return myUseLocalCoordinates;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#10;&#9;&#9;myUseLocalCoordinates = useLocalCoordinates;&#10;&#9;}&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDomainAttributeNameFigure() {&#10;&#9;&#9;return fFigureDomainAttributeNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDomainAttributeParentNameFigure() {&#10;&#9;&#9;return fFigureDomainAttributeParentNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureDomainAttributeTypeFigure() {&#10;&#9;&#9;return fFigureDomainAttributeTypeFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;" className="DomainAttributeFigure" layoutType="FLOW_LAYOUT" xsi:type="gmfgen:InnerClassViewmap"/>
      <modelFacet>
        <metaClass href="iaml.genmodel#//model/DomainAttribute"/>
        <containmentMetaFeature href="iaml.genmodel#//model/DomainStore/attributes"/>
        <childMetaFeature href="iaml.genmodel#//model/DomainStore/attributes"/>
      </modelFacet>
      <labels editPartClassName="DomainAttributeNameEditPart" elementIcon="true" itemSemanticEditPolicyClassName="DomainAttributeNameItemSemanticEditPolicy" notationViewFactoryClassName="DomainAttributeNameViewFactory" visualID="5052">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureDomainAttributeNameFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="WrappingLabel9EditPart" itemSemanticEditPolicyClassName="WrappingLabel9ItemSemanticEditPolicy" notationViewFactoryClassName="DomainAttributeLabelViewFactory" readOnly="true" visualID="5053">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureDomainAttributeParentNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      <behaviour diagramKind="Iaml_Element" editPolicyClassName="ElementOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.element.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</labels>
      <labels editPartClassName="WrappingLabel10EditPart" itemSemanticEditPolicyClassName="WrappingLabel10ItemSemanticEditPolicy" notationViewFactoryClassName="DomainAttributeLabelViewFactory" readOnly="true" visualID="5054">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureDomainAttributeTypeFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      <behaviour diagramKind="Iaml_Element" editPolicyClassName="ElementOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.element.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</labels>
    <behaviour diagramKind="Iaml_Element" editPolicyClassName="ElementOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.element.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</topLevelNodes>
    <topLevelNodes canonicalEditPolicyClassName="RemoteDomainObjectCanonicalEditPolicy" createCommandClassName="RemoteDomainObjectCreateCommand" editPartClassName="RemoteDomainObjectEditPart" graphicalNodeEditPolicyClassName="RemoteDomainObjectGraphicalNodeEditPolicy" itemSemanticEditPolicyClassName="RemoteDomainObjectItemSemanticEditPolicy" visualID="2022">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType editHelperClassName="RemoteDomainObjectEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class RemoteDomainObjectFigure extends org.eclipse.draw2d.RectangleFigure {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRemoteDomainObjectNameFigure; &#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureRemoteDomainObjectParentNameFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public RemoteDomainObjectFigure() {&#10;&#9;&#9;&#10;&#9;org.eclipse.draw2d.FlowLayout layoutThis = new org.eclipse.draw2d.FlowLayout();&#10;&#9;layoutThis.setStretchMinorAxis(false);&#10;&#9;layoutThis.setMinorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#10;&#9;layoutThis.setMajorAlignment(org.eclipse.draw2d.FlowLayout.ALIGN_LEFTTOP&#10;);&#10;&#9;layoutThis.setMajorSpacing(5);&#10;&#9;layoutThis.setMinorSpacing(5);&#10;&#9;layoutThis.setHorizontal(false);&#10;&#10;&#9;this.setLayoutManager(layoutThis);&#10;&#10;&#9;&#9;this.setLineWidth(2);&#10;&#10;this.setFont(THIS_FONT);&#10;&#10;&#10;this.setBorder(new org.eclipse.draw2d.MarginBorder(getMapMode().DPtoLP(4)&#10;, getMapMode().DPtoLP(4)&#10;, getMapMode().DPtoLP(4)&#10;, getMapMode().DPtoLP(4)&#10;));&#10;&#9;&#9;createContents();&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigureRemoteDomainObjectNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureRemoteDomainObjectNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigureRemoteDomainObjectNameFigure);&#10;&#10;&#10;&#10;fFigureRemoteDomainObjectParentNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureRemoteDomainObjectParentNameFigure.setText(&quot;[none]&quot;);&#10;&#9;fFigureRemoteDomainObjectParentNameFigure.setForegroundColor(org.eclipse.draw2d.ColorConstants.gray);&#10;&#10;this.add(fFigureRemoteDomainObjectParentNameFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private boolean myUseLocalCoordinates = false;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected boolean useLocalCoordinates() {&#10;&#9;&#9;return myUseLocalCoordinates;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#10;&#9;&#9;myUseLocalCoordinates = useLocalCoordinates;&#10;&#9;}&#10;&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRemoteDomainObjectNameFigure() {&#10;&#9;&#9;return fFigureRemoteDomainObjectNameFigure;&#10;&#9;}&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureRemoteDomainObjectParentNameFigure() {&#10;&#9;&#9;return fFigureRemoteDomainObjectParentNameFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;/**&#10; * @generated&#10; */&#10;static final org.eclipse.swt.graphics.Font THIS_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), &quot;Arial&quot;, 9, org.eclipse.swt.SWT.BOLD);&#10;&#10;" className="RemoteDomainObjectFigure" layoutType="FLOW_LAYOUT" xsi:type="gmfgen:InnerClassViewmap">
        <attributes fixedFont="true" xsi:type="gmfgen:StyleAttributes"/>
      </viewmap>
      <modelFacet modelElementSelector="//@expressionProviders/@providers.0/@expressions.3">
        <metaClass href="iaml.genmodel#//model/domain/RemoteDomainObject"/>
        <containmentMetaFeature href="iaml.genmodel#//model/DomainStore/children"/>
        <childMetaFeature href="iaml.genmodel#//model/DomainStore/children"/>
      </modelFacet>
      <labels editPartClassName="RemoteDomainObjectNameEditPart" elementIcon="true" itemSemanticEditPolicyClassName="RemoteDomainObjectNameItemSemanticEditPolicy" visualID="5055">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureRemoteDomainObjectNameFigure" xsi:type="gmfgen:ParentAssignedViewmap"/>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
      <labels editPartClassName="WrappingLabel11EditPart" itemSemanticEditPolicyClassName="WrappingLabel11ItemSemanticEditPolicy" readOnly="true" visualID="5056">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureRemoteDomainObjectParentNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes fixedForeground="true" xsi:type="gmfgen:StyleAttributes"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      <behaviour diagramKind="Iaml_DomainObject" editPolicyClassName="DomainObjectOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.domain_object.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</labels>
    <behaviour diagramKind="Iaml_DomainObject" editPolicyClassName="DomainObjectOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.domain_object.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</topLevelNodes>
    <links createCommandClassName="SyncWireCreateCommand" editPartClassName="SyncWireEditPart" itemSemanticEditPolicyClassName="SyncWireItemSemanticEditPolicy" notationViewFactoryClassName="SyncWireViewFactory" reorientCommandClassName="SyncWireReorientCommand" visualID="4001">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType editHelperClassName="SyncWireEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class SyncWireFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureSyncWireNameFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public SyncWireFigure() {&#10;&#9;&#9;this.setLineWidth(1);&#10;this.setLineStyle(org.eclipse.draw2d.Graphics.LINE_DASH);&#10;&#10;&#9;&#9;createContents();&#10;&#9;&#9;setSourceDecoration(createSourceDecoration());&#10;&#9;&#9;setTargetDecoration(createTargetDecoration());&#10;&#9;}&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigureSyncWireNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureSyncWireNameFigure.setText(&quot;&lt;...&gt;&quot;);&#10;&#10;this.add(fFigureSyncWireNameFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#10;&#9;&#9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#10;df.setLineWidth(1);&#10;&#9;&#9;return df;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#10;&#9;&#9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#10;df.setLineWidth(1);&#10;&#9;&#9;return df;&#10;&#9;}&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureSyncWireNameFigure() {&#10;&#9;&#9;return fFigureSyncWireNameFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;" className="SyncWireFigure" xsi:type="gmfgen:InnerClassViewmap"/>
      <modelFacet modelElementSelector="//@expressionProviders/@providers.0/@expressions.4" xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass href="iaml.genmodel#//model/wires/SyncWire"/>
        <containmentMetaFeature href="iaml.genmodel#//model/ContainsWires/wires"/>
        <childMetaFeature href="iaml.genmodel#//model/ContainsWires/wires"/>
        <sourceMetaFeature href="iaml.genmodel#//model/Wire/from"/>
        <targetMetaFeature href="iaml.genmodel#//model/Wire/to"/>
      </modelFacet>
      <labels editPartClassName="SyncWireNameEditPart" elementIcon="true" itemSemanticEditPolicyClassName="SyncWireNameItemSemanticEditPolicy" notationViewFactoryClassName="SyncWireNameViewFactory" visualID="6001">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureSyncWireNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes xsi:type="gmfgen:LabelOffsetAttributes" y="40"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.0" xsi:type="gmfgen:FeatureLabelModelFacet">
          <metaFeatures href="iaml.genmodel#//model/NamedElement/name"/>
        </modelFacet>
      </labels>
    <behaviour diagramKind="Iaml_Wire" editPolicyClassName="WireOpenDiagramEditPolicy" editorID="org.openiaml.model.diagram.wire.part.IamlDiagramEditorID" xsi:type="gmfgen:OpenDiagramBehaviour"/>
</links>
    <links createCommandClassName="ExtendsEdgeCreateCommand" editPartClassName="ExtendsEdgeEditPart" itemSemanticEditPolicyClassName="ExtendsEdgeItemSemanticEditPolicy" notationViewFactoryClassName="ExtendsEdgeViewFactory" reorientCommandClassName="ExtendsEdgeReorientCommand" visualID="4003">
      <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType editHelperClassName="ExtendsEdgeEditHelper" xsi:type="gmfgen:MetamodelType"/>
      <viewmap classBody="&#10;/**&#10; * @generated&#10; */&#10;public class ExtendsEdgeFigure extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFigureExtendsEdgeNameFigure; &#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public ExtendsEdgeFigure() {&#10;&#9;&#9;this.setLineWidth(1);&#10;&#10;&#9;&#9;createContents();&#10;&#9;&#9;setTargetDecoration(createTargetDecoration());&#10;&#9;}&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private void createContents(){&#10;&#10;&#10;fFigureExtendsEdgeNameFigure = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#10;fFigureExtendsEdgeNameFigure.setText(&quot;extends&quot;);&#10;&#10;this.add(fFigureExtendsEdgeNameFigure);&#10;&#10;&#10;&#9;}&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#10;&#9;&#9;org.eclipse.draw2d.PolylineDecoration df = new org.eclipse.draw2d.PolylineDecoration();&#10;df.setLineWidth(1);&#10;&#9;&#9;return df;&#10;&#9;}&#10;&#10;&#10;&#9;/**&#10;&#9; * @generated&#10;&#9; */&#10;&#9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFigureExtendsEdgeNameFigure() {&#10;&#9;&#9;return fFigureExtendsEdgeNameFigure;&#10;&#9;}&#10;&#10;&#10;}&#10;&#10;" className="ExtendsEdgeFigure" xsi:type="gmfgen:InnerClassViewmap"/>
      <modelFacet xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass href="iaml.genmodel#//model/wires/ExtendsEdge"/>
        <containmentMetaFeature href="iaml.genmodel#//model/ContainsWires/extendsEdges"/>
        <childMetaFeature href="iaml.genmodel#//model/ContainsWires/extendsEdges"/>
        <sourceMetaFeature href="iaml.genmodel#//model/wires/ExtendsEdge/from"/>
        <targetMetaFeature href="iaml.genmodel#//model/wires/ExtendsEdge/to"/>
      </modelFacet>
      <labels editPartClassName="WrappingLabel7EditPart" elementIcon="true" itemSemanticEditPolicyClassName="WrappingLabel7ItemSemanticEditPolicy" notationViewFactoryClassName="ExtendsEdgeLabelViewFactory" readOnly="true" visualID="6003">
        <diagramRunTimeClass href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel" getterName="getFigureExtendsEdgeNameFigure" xsi:type="gmfgen:ParentAssignedViewmap">
          <attributes xsi:type="gmfgen:LabelOffsetAttributes" y="40"/>
        </viewmap>
        <modelFacet parser="//@labelParsers/@implementations.1"/>
      </labels>
    </links>
    <palette>
      <groups description="Model Elements" title="Model Elements">
        <entries description="Create new PrimitiveOperation" genNodes="//@diagram/@topLevelNodes.4" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/PrimitiveOperation.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/PrimitiveOperation.gif" title="PrimitiveOperation" xsi:type="gmfgen:ToolEntry"/>
        <entries description="Create new CompositeOperation" genNodes="//@diagram/@topLevelNodes.0" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/CompositeOperation.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/CompositeOperation.gif" title="CompositeOperation" xsi:type="gmfgen:ToolEntry"/>
        <entries description="Create new Property" genNodes="//@diagram/@topLevelNodes.3" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/Property.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/Property.gif" title="Property" xsi:type="gmfgen:ToolEntry"/>
        <entries description="Create new DomainObject" genNodes="//@diagram/@topLevelNodes.1" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/DomainObject.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/DomainObject.gif" title="DomainObject" xsi:type="gmfgen:ToolEntry"/>
        <entries description="Create new DomainAttribute" genNodes="//@diagram/@topLevelNodes.5" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/DomainAttribute.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/DomainAttribute.gif" title="DomainAttribute" xsi:type="gmfgen:ToolEntry"/>
        <entries description="Create new RemoteDomainObject" genNodes="//@diagram/@topLevelNodes.6" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/RemoteDomainObject.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/RemoteDomainObject.gif" title="RemoteDomainObject" xsi:type="gmfgen:ToolEntry"/>
      </groups>
      <groups collapse="true" description="Wires" title="Wires">
        <entries description="Create new SyncWire" genLinks="//@diagram/@links.0" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/SyncWire.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/SyncWire.gif" title="SyncWire" xsi:type="gmfgen:ToolEntry"/>
        <entries description="Create new ExtendsEdge" genLinks="//@diagram/@links.1" largeIconPath="/org.openiaml.model.edit/icons/full/obj32/ExtendsEdge.gif" smallIconPath="/org.openiaml.model.edit/icons/full/obj16/ExtendsEdge.gif" title="ExtendsEdge" xsi:type="gmfgen:ToolEntry"/>
      </groups>
    </palette>
    <preferencePages iD="org.openiaml.model.diagram.general" name="Iaml Diagram" xsi:type="gmfgen:GenStandardPreferencePage">
      <children iD="org.openiaml.model.diagram.appearance" kind="Appearance" name="Appearance" xsi:type="gmfgen:GenStandardPreferencePage"/>
      <children iD="org.openiaml.model.diagram.connections" kind="Connections" name="Connections" xsi:type="gmfgen:GenStandardPreferencePage"/>
      <children iD="org.openiaml.model.diagram.printing" kind="Printing" name="Printing" xsi:type="gmfgen:GenStandardPreferencePage"/>
      <children iD="org.openiaml.model.diagram.rulersAndGrid" kind="RulersAndGrid" name="Rulers And Grid" xsi:type="gmfgen:GenStandardPreferencePage"/>
    </preferencePages>
  </diagram>
  <plugin iD="org.openiaml.model.diagram.domain_store" name="Iaml Diagram Plugin (Domain Store)" provider="www.openiaml.org" version="0.5.0.qualifier">
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences child="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.0" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.1" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.2" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.3" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.4" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.5" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.6" parent="//@diagram"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/linksNavigatorGroup.gif" groupName="links" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.0" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.0" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.1" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.0" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.1" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.3" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.0" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.3" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.4" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.0" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.4" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.5" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.0" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.5" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.6" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.0" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.6" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.0" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.0" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.1" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.1" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.2" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.2" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.3" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.3" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.4" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.4" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.5" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.5" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.6" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.0" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.0" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.6" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.1" groupIcon="icons/linksNavigatorGroup.gif" groupName="links" parent="//@diagram"/>
    <childReferences child="//@diagram/@topLevelNodes.1" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.1" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.1" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.1" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.5" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.1" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.1" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.5" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.6" groupIcon="icons/linkTargetNavigatorGroup.gif" groupName="target" parent="//@diagram/@links.1" referenceType="out_target"/>
    <childReferences child="//@diagram/@links.1" groupIcon="icons/incomingLinksNavigatorGroup.gif" groupName="incoming links" parent="//@diagram/@topLevelNodes.6" referenceType="in_source"/>
    <childReferences child="//@diagram/@topLevelNodes.1" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.1" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.1" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.1" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.5" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.1" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.1" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.5" referenceType="out_target"/>
    <childReferences child="//@diagram/@topLevelNodes.6" groupIcon="icons/linkSourceNavigatorGroup.gif" groupName="source" parent="//@diagram/@links.1" referenceType="in_source"/>
    <childReferences child="//@diagram/@links.1" groupIcon="icons/outgoingLinksNavigatorGroup.gif" groupName="outgoing links" parent="//@diagram/@topLevelNodes.6" referenceType="out_target"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs iD="appearance" xsi:type="gmfgen:GenStandardPropertyTab"/>
    <tabs iD="diagram" xsi:type="gmfgen:GenStandardPropertyTab"/>
    <tabs iD="domain" label="Core" xsi:type="gmfgen:GenCustomPropertyTab">
      <filter xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel href="iaml.genmodel#/"/>
  <expressionProviders>
    <providers xsi:type="gmfgen:GenExpressionInterpreter">
      <expressions body="self.oclIsTypeOf( CompositeOperation )" xsi:type="gmfgen:GenConstraint"/>
      <expressions body="not(self.oclIsTypeOf( domain::RemoteDomainObject ))" xsi:type="gmfgen:GenConstraint"/>
      <expressions body="self.oclIsTypeOf( PrimitiveOperation )" xsi:type="gmfgen:GenConstraint"/>
      <expressions body="self.oclIsTypeOf( RemoteDomainObject )" xsi:type="gmfgen:GenConstraint"/>
      <expressions body="self.oclIsTypeOf( SyncWire )" xsi:type="gmfgen:GenConstraint"/>
    </providers>
  </expressionProviders>
  <labelParsers extensibleViaService="true">
    <implementations uses="//@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.1/@modelFacet //@diagram/@topLevelNodes.3/@labels.0/@modelFacet //@diagram/@topLevelNodes.3/@labels.1/@modelFacet //@diagram/@topLevelNodes.4/@labels.0/@modelFacet //@diagram/@topLevelNodes.5/@labels.0/@modelFacet //@diagram/@topLevelNodes.6/@labels.0/@modelFacet //@diagram/@links.0/@labels.0/@modelFacet" xsi:type="gmfgen:PredefinedParser"/>
    <implementations uses="//@diagram/@topLevelNodes.0/@labels.1/@modelFacet //@diagram/@topLevelNodes.1/@labels.1/@modelFacet //@diagram/@topLevelNodes.2/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.2/@modelFacet //@diagram/@topLevelNodes.3/@labels.2/@modelFacet //@diagram/@topLevelNodes.3/@labels.3/@modelFacet //@diagram/@topLevelNodes.4/@labels.1/@modelFacet //@diagram/@topLevelNodes.5/@labels.1/@modelFacet //@diagram/@topLevelNodes.5/@labels.2/@modelFacet //@diagram/@topLevelNodes.6/@labels.1/@modelFacet //@diagram/@links.1/@labels.0/@modelFacet" xsi:type="gmfgen:ExternalParser"/>
  </labelParsers>
  <contextMenus context="//@diagram">
    <items xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>

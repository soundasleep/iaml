import iaml;

extension metamodel::Extensions reexport;

pageTitle(model::InternetApplication this) :
	if name == null || name == "" then "(untitled application)" else name.toFirstUpper();

pageTitle(model::visual::Page this) :
	if name == null || name == "" then id else name;

formName(model::visual::InputForm this) :
	if (name == null || name == "") then "(untitled form)" else name;
	
textFieldName(model::visual::InputTextField this) :
	if (name == null || name == "") then "(untitled field)" else name;

buttonName(model::visual::Button this) :
	if (name == null || name == "") then "Submit Query" else name;
	
safeName(model::NamedElement this) :
	safeNameString(id);

safeName(emf::EObject this) :
	"unexpected eobject " + this;

safeNameString(String s) :
	s.replaceAll("[^A-Za-z0-9]", "_");

escapeString(String s) :
	s.replaceAll("[\"]", "\\\"");
	
operationName(model::WireEdgeDestination this) : 
	"invalid_operation";

operationName(model::Operation this) :
	safeName(this);

conditionName(emf::EObject this ) :
	"invalid_condition";

conditionName(model::Condition this) :
	safeName(this);
	
/* is this operation contained in the current page? */
model::visual::Page containingPage(model::visual::Page element) :
	element;
	
model::visual::Page containingPage(model::NamedElement element) :
	containingPage(element.eContainer);

/* default for any EObject */
model::visual::Page containingPage(emf::EObject element) :
	null;

/* is [target] on the same page as [source]? */ 
onCurrentPage(model::WireEdgesSource source, model::WireEdgeDestination target) :
	containingPage(source) != null && 
	containingPage(source) == containingPage(target);

/**
 * Get all the operations that may be referenced in a container. In particular:
 * - Any operations in the page/container
 * - Any operations in the elements contained in this page/container
 * - Any operations contained in the direct parent scope (if any)
 */
allContainerOperations(model::ApplicationElementContainer this) :
	// we have to toSet() it so that we *clone* the list of operations, and not
	// add operations to the list directly
	// see http://www.openarchitectureware.org/forum/viewtopic.php?showtopic=11142 
	operations.toSet().addAll( children.allContainerOperations() ).addAll( possibleParentOperations(eContainer) );

allContainerOperations(model::ApplicationElement this) :
	operations;

/* for a page that is part of a session/scope */
possibleParentOperations(model::scopes::Session this ) :
	operations;

possibleParentOperations(emf::EObject this ) :
	{};

/* get the start node for an operation */
startNode(model::CompositeOperation this) :
	nodes.selectFirst( node | node.metaType.isAssignableFrom(model::operations::StartNode) );

startNode(model::CompositeCondition this) :
	nodes.selectFirst( node | node.metaType.isAssignableFrom(model::operations::StartNode) );

/* get the next execution flow for a decision operation that has passed */
passedExectionFlow(model::operations::DecisionOperation this) :
	outExecutions.selectFirst( flow | !flow.to.metaType.isAssignableFrom(model::operations::CancelNode) );

failedExectionFlow(model::operations::DecisionOperation this) :
	outExecutions.selectFirst( flow | flow.to.metaType.isAssignableFrom(model::operations::CancelNode) );

/** does this operation have a "fail" edge? */
getFailEdge(model::CompositeOperation this) :
	outEdges.selectFirst( e | e.isFailEdge() ) ;

isFailEdge(model::WireEdge this ) :
	false;
	
isFailEdge(model::wires::CompositeWire this ) :
	name == "fail" ;

/** get the containing session of the given element, or null if none */
model::scopes::Session containingSession(emf::EObject this) :
	null;

model::scopes::Session containingSession(model::NamedElement this) :
	containingSession(eContainer);
	
model::scopes::Session containingSession(model::scopes::Session this) :
	this;

model::scopes::Session containingSession(model::InternetApplication this) :
	null;

/** find the FileDomainStore for a given FileDomainAttribute */
model::domain::FileDomainStore getFileDomainStore(model::domain::FileDomainAttribute this) :
	getFileDomainObject(this).eContainer;
model::domain::FileDomainObject getFileDomainObject(model::domain::FileDomainAttribute this) :
	eContainer;

model::DomainStore getDomainStore(model::DomainAttribute this) :
	getDomainObject(this).eContainer;
model::DomainObject getDomainObject(model::DomainAttribute this) :
	eContainer;

/** for a given setPropertyToValue operation, should we be calling
  additional event triggers? */
shouldExpandEventTriggers(model::ChainedOperation this ) :
	getOperationName( eContainer ) == "update";

getOperationName(model::Operation this) :
	name;
getOperationName(emf::EObject this) :
	"[no operation name for an EObject]";
	
isVisibleThing(emf::EObject this) :
	model::VisibleThing.isInstance(this);
isAbstractDomainAttribute(emf::EObject this) :
	model::domain::AbstractDomainAttribute.isInstance(this);	
isSession(emf::EObject this) :
	model::scopes::Session.isInstance(this);	
isPage(emf::EObject this) :
	model::visual::Page.isInstance(this);	
isInputTextField(emf::EObject this) :
	model::visual::InputTextField.isInstance(this);	

/** 
 * a hack way to create backtrace-able errors
 * based on http://www.openarchitectureware.org/forum/viewtopic.php?showtopic=5540
 * to use: «EXPAND exception FOR throwException("Your message goes here")»
 * AND add this anywhere in your template file: (very important)

«DEFINE exception FOR Object»
«ENDDEFINE»
   
 */
String throwException(String message) :
	JAVA org.openiaml.model.codegen.oaw.OawCodeGenerator.throwException(java.lang.String);

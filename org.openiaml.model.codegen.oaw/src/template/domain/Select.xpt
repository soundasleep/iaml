«IMPORT iaml»

/**
 * Methods for selecting queries and databases.
 */
«EXTENSION template::GeneratorExtensions»

«DEFINE evaluateSelectWire FOR model::wires::SelectWire»
	/* selection wire «this» */
	
	// where are we loading it from? sets $db
	«EXPAND selectDatabase FOR from»
	
	// create query
	$query = "SELECT * FROM «safeNameString(((model::DomainObject) from).name)»
		WHERE " . «EXPAND getQuery FOR this-»;
	$args = array(«EXPAND template::operations::Parameters::callParameter(true, this, false) FOREACH inEdges.typeSelect(model::wires::ParameterWire) SEPARATOR ","»);
	
	// execute query
	$rs = $db->prepare($query) or throw_new_IamlRuntimeException("Could not prepare query '$query': " . print_r($db->errorInfo(), true));
	$rs->execute($args) or throw_new_IamlRuntimeException("Could not execute query '$query': " . print_r($db->errorInfo(), true));
«ENDDEFINE»

/* create a SQL query to select a particular value */
«DEFINE getQuery FOR model::wires::SelectWire»
	«IF query == null || query.trim().length == 0»
		«REM»an empty query«ENDREM»
		"1"
	«ELSE-»
		"«query-»" /* direct query */
	«ENDIF-»
«ENDDEFINE»

/* select a database source */
«DEFINE selectDatabase FOR model::WireEdgesSource»
	«EXPAND exception FOR throwException("Cannot connect to a database source from " + this)»
«ENDDEFINE»

«DEFINE selectDatabase FOR model::DomainObject»
	«EXPAND selectDatabaseStore FOR eContainer»	
«ENDDEFINE»

/* select a particular database */
«DEFINE selectDatabaseStore FOR emf::EObject»
	«EXPAND exception FOR throwException("Unknown DomainObject container " + this)»
«ENDDEFINE»

«DEFINE selectDatabaseStore FOR model::DomainStore»
	$db = new PDO('sqlite:«safeNameString(id)».db') 
		or throw_new_IamlRuntimeException("Could not open DomainStore '«id»'");
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»

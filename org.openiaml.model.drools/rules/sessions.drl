#created on: 4/11/2008
package org.openiaml.model.drools.rules.sessions

#list any import classes here.
import org.openiaml.model.drools.*;

import org.openiaml.model.inference.*;
import org.openiaml.model.model.*;
import org.openiaml.model.model.impl.*;
import org.openiaml.model.model.wires.*;
import org.openiaml.model.model.visual.*;
import org.openiaml.model.model.operations.*;
import org.openiaml.model.model.scopes.*;
import org.openiaml.model.model.components.*;

#declare any global variables here
global EcoreCreateElementsHelper handler;
global DroolsInsertionQueue queue;
global DroolsHelperFunctions functions;

/**
 * @inference Scope
 *    A {@model Scope} contains an 'onInit' {@model EventTrigger}.
 */
rule "Create 'init' event for Sessions"
	when
		session : Scope( overridden == false )
		not (event : EventTrigger( eContainer == session, session.onInit == event ))
		
	then
		EventTrigger event = handler.generatedEventTriggerOnInit(session, session);
		queue.add(event, drools);
	
end

/**
 * @inference Scope
 *    A {@model Scope} contains an 'onAccess' {@model EventTrigger}.
 */
rule "Create 'access' event for Sessions"
	when
		session : Scope( overridden == false )
		not (event : EventTrigger( eContainer == session, session.onAccess == event ))
		
	then
		EventTrigger event = handler.generatedEventTriggerOnAccess(session, session);
		queue.add(event, drools);
	
end


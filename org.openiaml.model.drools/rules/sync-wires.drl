#created on: 4/11/2008
package org.openiaml.model.drools

#list any import classes here.
import org.openiaml.model.inference.*;
import org.openiaml.model.model.*;
import org.openiaml.model.model.impl.*;
import org.openiaml.model.model.wires.*;
import org.openiaml.model.model.visual.*;
import org.openiaml.model.model.operations.*;

#declare any global variables here
global EcoreCreateElementsHelper handler;

function boolean syncMatches(NamedElement e1, NamedElement e2) {
	return e1.getName().toLowerCase().equals(e2.getName().toLowerCase());
}

rule "Sync wires between pages should create sync wires between all elements inside each page that match"
	when
		p1 : ApplicationElement( )
		p2 : ApplicationElement(this != p1)
		source : SyncWire(overridden == false, from == p1, to == p2)
		
		e1 : ApplicationElement( eContainer == p1 )
		e2 : ApplicationElement( eContainer == p2, eval(syncMatches(e1, e2)) )
	
		not(SyncWire( from == e1, to == e2, name == "sync", eContainer == source ))
		not(SyncWire( from == e2, to == e1, name == "sync", eContainer == source ))
		
	then
		SyncWire sw = handler.generatedSyncWire(source, source, e1, e2);
		sw.setName("sync");
		insert(sw);
		
end

# Ideally, these two commands would be joined together into one
rule "Run instance wire from source.edit to target.update"
	when
		sw : SyncWire(overridden == false)
		source : ContainsEventTriggers( ) from sw.from  
		target : ContainsOperations( ) from sw.to
		
		event : EventTrigger( eContainer == source, name=="edit" )
		operation : Operation( eContainer == target, name=="update" )
		
		not (RunInstanceWire( eContainer == sw, from == event, to == operation, name == "run" ))
		
	then
		RunInstanceWire rw = handler.generatedRunInstanceWire(sw, sw, event, operation);
		rw.setName("run");
		insert(rw);

end

rule "Run instance wire from target.edit to source.update"
	when
		sw : SyncWire(overridden == false)
		target : InputTextField( ) from sw.from  
		source : InputTextField( ) from sw.to
		
		event : EventTrigger( eContainer == source, name=="edit" )
		operation : Operation( eContainer == target, name=="update" )
		
		not (RunInstanceWire( eContainer == sw, from == event, to == operation, name == "run" ))
		
	then
		RunInstanceWire rw = handler.generatedRunInstanceWire(sw, sw, event, operation);
		rw.setName("run");
		insert(rw);

end

# Ideally, these two commands would be joined together into one
rule "Connect parameter wire to: run instance wire from source.edit to target.update"
	when
		sw : SyncWire(overridden == false)
		source : InputTextField( ) from sw.from
		target : InputTextField( ) from sw.to
	
		event : EventTrigger( eContainer == source, name=="edit" )
		operation : Operation( eContainer == target, name=="update" )
		field : ApplicationElementProperty( eContainer == source, name=="fieldValue" )
		wire : RunInstanceWire( from == event, to == operation, name == "run", eContainer == sw )
		
		not (ParameterWire( eContainer == sw, from == field, to == wire )) 
		
	then
		ParameterWire pw = handler.generatedParameterWire(sw, sw, field, wire); 
		insert(pw);

end

rule "Connect parameter wire to: run instance wire from target.edit to source.update"
	when
		sw : SyncWire(overridden == false)
		target : InputTextField( ) from sw.from
		source : InputTextField( ) from sw.to
	
		event : EventTrigger( eContainer == source, name=="edit" )
		operation : Operation( eContainer == target, name=="update" )
		field : ApplicationElementProperty( eContainer == source, name=="fieldValue" )
		wire : RunInstanceWire( from == event, to == operation, name == "run", eContainer == sw )
		
		not (ParameterWire( eContainer == sw, from == field, to == wire )) 
		
	then
		ParameterWire pw = handler.generatedParameterWire(sw, sw, field, wire); 
		insert(pw);

end

# Ideally, these two commands would be joined together into one
rule "Run instance wire from source.access to source.init, when we have a value to provide as a parameter"
	when
		sw : SyncWire(overridden == false)
		source : ContainsEventTriggers( ) from sw.from  
		target : ContainsOperations( ) from sw.to
		
		event : EventTrigger( eContainer == source, name=="access" )
		operation : Operation( eContainer == source, name=="init" )
		field : ApplicationElementProperty( eContainer == target, name=="fieldValue" )
		
		not (RunInstanceWire( eContainer == sw, from == event, to == operation, name == "run" ))
		
	then
		RunInstanceWire rw = handler.generatedRunInstanceWire(sw, sw, event, operation);
		rw.setName("run");
		insert(rw);

end

rule "Run instance wire from target.access to target.init, when we have a value to provide as a parameter"
	when
		sw : SyncWire(overridden == false)
		source : ContainsEventTriggers( ) from sw.from  
		target : ContainsOperations( ) from sw.to
		
		event : EventTrigger( eContainer == target, name=="access" )
		operation : Operation( eContainer == target, name=="init" )
		field : ApplicationElementProperty( eContainer == source, name=="fieldValue" )
		
		not (RunInstanceWire( eContainer == sw, from == event, to == operation, name == "run" ))
		
	then
		RunInstanceWire rw = handler.generatedRunInstanceWire(sw, sw, event, operation);
		rw.setName("run");
		insert(rw);

end

# Ideally, these two commands would be joined together into one
rule "Connect parameter wire to: run instance wire from source.access to source.init"
	when
		sw : SyncWire(overridden == false)
		source : InputTextField( ) from sw.from
		target : InputTextField( ) from sw.to
	
		event : EventTrigger( eContainer == source, name=="access" )
		operation : Operation( eContainer == source, name=="init" )
		field : ApplicationElementProperty( eContainer == target, name=="fieldValue" )
		wire : RunInstanceWire( from == event, to == operation, name == "run", eContainer == sw )
		
		not (ParameterWire( eContainer == sw, from == field, to == wire )) 
		
	then
		ParameterWire pw = handler.generatedParameterWire(sw, sw, field, wire); 
		insert(pw);

end

rule "Connect parameter wire to: run instance wire from target.access to target.init"
	when
		sw : SyncWire(overridden == false)
		source : InputTextField( ) from sw.from
		target : InputTextField( ) from sw.to
	
		event : EventTrigger( eContainer == target, name=="access" )
		operation : Operation( eContainer == target, name=="init" )
		field : ApplicationElementProperty( eContainer == source, name=="fieldValue" )
		wire : RunInstanceWire( from == event, to == operation, name == "run", eContainer == sw )
		
		not (ParameterWire( eContainer == sw, from == field, to == wire )) 
		
	then
		ParameterWire pw = handler.generatedParameterWire(sw, sw, field, wire); 
		insert(pw);

end

function boolean connects(WireEdge wire, Object a, Object b) {
	return (wire.getFrom().equals(a) && wire.getTo().equals(b)) ||
		(wire.getFrom().equals(b) && wire.getTo().equals(a));
}

rule "Test: SyncWire between A to B, and B to C, means there should be a SyncWire from A to C"
	when
		container : ContainsWires ( )
		
		a : Page ( )
		b : Page ( eval(a != b) )
		c : Page ( eval(b != c), eval(a != c) )
		
		aw : SyncWire( eval(connects(aw, a, b)), eContainer == container )
		bw : SyncWire( eval(connects(bw, b, c)) )
		not (cw : SyncWire( eval(connects(cw, c, a))) )
		
	then
		SyncWire newWire = handler.generatedSyncWire(aw, container, a, c);
		newWire.setName("chained sync from: " + aw.getName() + " and: " + bw.getName()); 
		insert(newWire);
		
		// still need to connect conditions
	
end


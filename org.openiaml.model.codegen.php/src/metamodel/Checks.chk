import iaml;

// NOTE: checks cannot have a semicolon in the exception, otherwise the 
// OAW parser won't be able to parse beyond it
extension metamodel::Extensions;

// TODO add test cases for model validation
// both through Eclipse and through manual test cases (code generation)
context model::InternetApplication ERROR "No pages in internet application" :
	children.exists( e | model::visual::Page.isInstance(e) )
	|| sessions.exists( e | e.children.exists( f | model::visual::Page.isInstance( f )) );

context model::visual::Page ERROR "Page must have a name" :
	name.length > 0;
	
context model::Operation ERROR "Operation must have a name" :
	name.length > 0;
	
context model::components::LoginHandler ERROR "A login handler must have an incoming parameter to check against" :
	inEdges.exists ( e | model::wires::ParameterWire.isInstance(e) );

context model::wires::RunInstanceWire ERROR "A run instance wire can only connect to an operation" :
	model::Operation.isInstance( to );

context model::operations::DecisionOperation ERROR "A compare decision operation must have at least two data flows in to compare" :
	(name == "equal?" && inFlows.size >= 2) 
	|| (name != "equal?"); 

context model::operations::DecisionOperation ERROR "A DecisionOperation can only have at most two out execution edges" :
	outExecutions.size <= 2;
	
context model::wires::SyncWire ERROR "You cannot have a SyncWire that connects to a StaticValue":
	!model::StaticValue.isInstance(from) &&
	!model::StaticValue.isInstance(to);
	
context model::wires::SyncWire ERROR "You cannot have a SyncWire that connects to a QueryParameter":
	!model::QueryParameter.isInstance(from) &&
	!model::QueryParameter.isInstance(to);

context model::wires::SyncWire ERROR "A SyncWire cannot connect to itself":
	from != to;

context model::wires::SyncWire ERROR "You cannot have a SyncWire connecting two ApplicationElementProperties":
	!(model::ApplicationElementProperty.isInstance(from) && 
	model::ApplicationElementProperty.isInstance(to));
	
context model::scopes::Session ERROR "Sessions cannot directly contain InputTextFields" :
	!children.exists( e | model::visual::InputTextField.isInstance(e) );

context model::scopes::Session ERROR "Sessions cannot directly contain InputForms" :
	!children.exists( e | model::visual::InputForm.isInstance(e) );
	
context model::DomainObject ERROR "You cannot have a DomainObject called single_values (reserved word)" :
	name != "single_values";

context model::DomainAttributeInstance ERROR "A DomainAttributeInstance cannot have more than one Select or NewInstance wire" :
	inEdges.typeSelect(model::wires::SelectWire).toSet().union(inEdges.typeSelect(model::wires::NewInstanceWire)).size <= 1;
	
context model::DomainObjectInstance ERROR "A DomainObjectInstance cannot have more than one Select or NewInstance wire" :
	inEdges.typeSelect(model::wires::SelectWire).toSet().union(inEdges.typeSelect(model::wires::NewInstanceWire)).size <= 1;
	
context model::wires::SelectWire ERROR "A SelectWire must come from a valid DomainObject":
	model::DomainObject.isInstance(from);	

/**
 * Important: If this message changes, it must also be updated in org.openiaml.model.custom.actions.GenerateCodeAction#couldBePhantomEdges()
 */	
context model::WireEdge ERROR "A WireEdge must have a 'from'" :
	from != null;

/**
 * Important: If this message changes, it must also be updated in org.openiaml.model.custom.actions.GenerateCodeAction#couldBePhantomEdges()
 */	
context model::WireEdge ERROR "A WireEdge must have a 'to'" :
	to != null;

context model::wires::ExtendsWire ERROR "A Role cannot extend itself" :
	from != to;
	
context model::wires::ExtendsWire ERROR "An ExtendsWire can only connect to a DomainObject, DomainAttribute or DomainAttributeInstance" :
	(model::DomainObject.isInstance(from) || model::DomainAttribute.isInstance(from) || model::DomainAttributeInstance.isInstance(from))
	&& (model::DomainObject.isInstance(to) || model::DomainAttribute.isInstance(to) || model::DomainAttributeInstance.isInstance(to));

context model::wires::ProvidesWire ERROR "An ProvidesWire can only connect from a Role" :
	model::users::Role.isInstance(from);

context model::wires::ProvidesWire ERROR "An ProvidesWire can only connect to a Permission" :
	model::users::Permission.isInstance(to);

context model::wires::RequiresWire ERROR "A RequiresWire can only be connected to ConstraintWires" :
	inEdges.forAll( e | model::wires::ConstraintWire.isInstance(e) );

context model::wires::RequiresWire ERROR "A RequireWire must connect to a Permission or a Role" :
	model::users::Permission.isInstance(to) || model::users::Role.isInstance(to); 

/*
 * isInstance() definitely works in OAW checks for abstract supertypes.
 * if a check isn't working, make sure that you are following the OAW
 * checks logic correctly; the predicate is expected to be _true_,
 * and will only throw an exception if the predicate is false.
 *
 * i.e.: "name != 'single_values'"
 */

context model::operations::OperationCallNode ERROR "An OperationCallNode must have exactly one RunInstanceWire connecting it to an Operation" :
	outEdges.size == 1
		&& model::wires::RunInstanceWire.isInstance(outEdges.first())
		&& model::Operation.isInstance(outEdges.first().to);

context model::wires::RunInstanceWire WARNING "This RunInstanceWire will not do anything: consider naming it 'onClick'" :
	!(model::VisibleThing.isInstance(from) && !(name == "click" || name == "onClick"));

context model::ApplicationElementProperty WARNING "A session property used as part of a login handler should have a default value set, otherwise secure pages will crash with an exception rather than going to the login page" :
	!(defaultValue == null && inEdges.typeSelect(model::wires::SetWire).from.typeSelect(model::components::LoginHandler).size > 0); 

context model::QueryParameter ERROR "A QueryParameter cannot be used on a Page outside of its containing page (" + containingPage(this.eContainer) + ", " + containingPage(outEdges.first().to.eContainer) + ")" :
	outEdges.forAll( e | isAccessibleOnPage(containingPage(this.eContainer), e.to) );

context model::components::LoginHandler ERROR "A LoginHandler[user] can not have more than one incoming ParameterWire" :
	(type != model::components::LoginHandlerTypes::USER) || inEdges.typeSelect(model::wires::ParameterWire).size <= 1; 

context model::wires::SelectWire ERROR "A SelectWire has incoming Parameters, but does not have a query to use them" :
	inEdges.typeSelect(model::wires::ParameterWire).size == 0 || (query != null && query.length > 0); 

context model::scopes::Session ERROR "A Session can only contain one LoginHandler" :
	children.typeSelect(model::components::LoginHandler).size <= 1;

context model::visual::Page ERROR "A Page cannot contain a LoginHandler" :
	children.typeSelect(model::components::LoginHandler).size == 0;

context model::CompositeOperation ERROR "An Operation can only contain one StartNode" :
	nodes.typeSelect(model::operations::StartNode).size <= 1;

context model::CompositeCondition ERROR "A Condition can only contain one StartNode" :
	nodes.typeSelect(model::operations::StartNode).size <= 1;

// issue 98: unused PrimitiveOperation names should issue a warning
// issue 136: CompositeOperations should not have this warning
context model::PrimitiveOperation WARNING "Unknown primitive operation name '" + name + "'" :
	model::CompositeOperation.isInstance(this) ||  
	(name == "setPropertyToValue" || name == "set" ||
		name == "javascriptAlert" || name == "save" ||
		name == "new" || name == "exists?" ||
		name == "equal?" || name == "add role" ||
		name == "add permission" || name == "remove role" ||
		name == "remove permission" || name == "check permissions" ||
		name == "true?");

context model::operations::Arithmetic ERROR "Arithmetic must have at least one incoming data source edge" :
	inFlows.size > 0;

context model::PrimitiveOperation ERROR "A 'set' PrimitiveOperation cannot set an ApplicationElementProperty: use 'setPropertyToValue'" :
	name != "set" || outFlows.to.typeSelect(model::ApplicationElementProperty).size == 0;

context model::PrimitiveOperation ERROR "A 'setPropertyToValue' PrimitiveOperation cannot set a TemporaryVariable: use 'set'" :
	name != "setPropertyToValue" || outFlows.to.typeSelect(model::TemporaryVariable).size == 0;
	
context model::components::Gate ERROR "A Gate needs to have at least one incoming Condition, or one outgoing 'first' wire, or it will never permit access" :
	inEdges.typeSelect(model::wires::ConditionWire).size >= 1
	|| outEdges.typeSelect(model::NamedElement).exists(w | w.name == "first");
	
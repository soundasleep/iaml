import iaml;

// NOTE: checks cannot have a semicolon in the exception, otherwise the 
// OAW parser won't be able to parse beyond it
extension metamodel::Extensions;

// TODO add test cases for model validation
// both through Eclipse and through manual test cases (code generation)
context model::InternetApplication ERROR "No pages in internet application" :
	children.exists( e | model::visual::Page.isInstance(e) );

context model::visual::Page ERROR "Page must have a name" :
	name.length > 0;
	
context model::Operation ERROR "Operation must have a name" :
	name.length > 0;
	
context model::components::LoginHandler ERROR "A login handler [type=key] must have an incoming parameter for the key (e.g. a StaticValue)" :
	inEdges.exists ( e | model::wires::ParameterWire.isInstance(e) );

context model::wires::RunInstanceWire ERROR "A run instance wire can only connect to an operation" :
	model::Operation.isInstance( to );

context model::operations::DecisionOperation ERROR "A compare decision operation must have at least two data flows in to compare" :
	(name == "equal?" && inFlows.size >= 2) 
	|| (name != "equal?"); 

context model::operations::DecisionOperation ERROR "A DecisionOperation can only have at most two out execution edges" :
	outExecutions.size <= 2;
	
context model::wires::SyncWire ERROR "You cannot have a SyncWire that connects to a StaticValue [from=" + from + "]":
	!model::StaticValue.isInstance(from) &&
	!model::StaticValue.isInstance(to);

context model::wires::SyncWire ERROR "A SyncWire cannot connect to itself":
	from != to;

context model::wires::SyncWire ERROR "You cannot have a SyncWire connecting two ApplicationElementProperties":
	!(model::ApplicationElementProperty.isInstance(from) && 
	model::ApplicationElementProperty.isInstance(to));
	
context model::DomainStore ERROR "DomainStores can only contain DomainObjects" :
	!model::DomainObject.isInstance( children.forAll( e | model::domain::AbstractDomainObject.isInstance(e) ) );

context model::DomainObject ERROR "DomainObjects can only contain DomainAttributes" :
	!model::DomainAttribute.isInstance( attributes.forAll( e | model::domain::AbstractDomainAttribute.isInstance(e) ) );

context model::domain::FileDomainStore ERROR "FileDomainStores can only contain FileDomainObjects" :
	!model::domain::FileDomainObject.isInstance( children.forAll( e | model::domain::AbstractDomainObject.isInstance(e) ) );

context model::domain::FileDomainObject ERROR "FileDomainObjects can only contain FileDomainAttributes" :
	!model::domain::FileDomainAttribute.isInstance( attributes.forAll( e | model::domain::AbstractDomainAttribute.isInstance(e) ) );

context model::VisibleThing ERROR "VisibleThings cannot directly contain AbstractDomainStores, they should be in the root" :
	!children.exists( e | model::domain::AbstractDomainStore.isInstance(e) );

context model::VisibleThing ERROR "VisibleThings cannot directly contain AbstractDomainObjects, they should be in AbstractDomainStores" :
	!children.exists( e | model::domain::AbstractDomainObject.isInstance(e) );

context model::VisibleThing ERROR "VisibleThings cannot directly contain AbstractDomainAttributes, they should be in AbstractDomainObjects" :
	!children.exists( e | model::domain::AbstractDomainAttribute.isInstance(e) );

context model::scopes::Session ERROR "Sessions cannot directly contain InputTextFields" :
	!children.exists( e | model::visual::InputTextField.isInstance(e) );

context model::scopes::Session ERROR "Sessions cannot directly contain InputForms" :
	!children.exists( e | model::visual::InputForm.isInstance(e) );
	
import iaml;

// NOTE: checks cannot have a semicolon in the exception, otherwise the 
// OAW parser won't be able to parse beyond it
extension metamodel::Extensions;

// TODO add test cases for model validation
// both through Eclipse and through manual test cases (code generation)
context model::InternetApplication ERROR "No frames in internet application" :
	!(scopes.typeSelect(model::visual::Frame).isEmpty &&
		scopes.scopes.typeSelect(model::visual::Frame).isEmpty);

context model::visual::Frame ERROR "Frame must have a name" :
	name.length > 0;
	
context model::Operation ERROR "Operation must have a name" :
	name.length > 0;
	
context model::components::LoginHandler ERROR "A login handler must have an incoming parameter to check against" :
	!inParameterEdges.isEmpty;

context model::wires::RunAction ERROR "A run instance wire can only connect to an operation" :
	model::Operation.isInstance( to );

context model::operations::DecisionOperation ERROR "A compare decision operation must have at least two data flows in to compare" :
	(name == "equal?" && inFlows.size >= 2) 
	|| (name != "equal?"); 

context model::operations::DecisionOperation ERROR "A DecisionOperation can only have at most two out execution edges" :
	outExecutions.size <= 2;
	
context model::wires::SyncWire ERROR "You cannot have a SyncWire that connects to a StaticValue":
	!model::StaticValue.isInstance(from) &&
	!model::StaticValue.isInstance(to);
	
context model::wires::SyncWire ERROR "You cannot have a SyncWire that connects to a QueryParameter":
	!model::QueryParameter.isInstance(from) &&
	!model::QueryParameter.isInstance(to);

context model::wires::SyncWire ERROR "A SyncWire cannot connect to itself":
	from != to;

context model::wires::SyncWire ERROR "You cannot have a SyncWire connecting two ApplicationElementProperties":
	!(model::Property.isInstance(from) && 
	model::Property.isInstance(to));
	
context model::DomainObject ERROR "You cannot have a DomainObject called single_values (reserved word)" :
	name != "single_values";

context model::DomainAttributeInstance ERROR "A DomainAttributeInstance cannot have more than one Select or NewInstance wire" :
	inWires.typeSelect(model::wires::SelectWire).toSet().union(inWires.typeSelect(model::wires::NewInstanceWire)).size <= 1;
	
context model::DomainObjectInstance ERROR "A DomainObjectInstance cannot have more than one Select or NewInstance wire" :
	inWires.typeSelect(model::wires::SelectWire).toSet().union(inWires.typeSelect(model::wires::NewInstanceWire)).size <= 1;
	
context model::wires::SelectWire ERROR "A SelectWire must come from a valid DomainObject":
	model::DomainObject.isInstance(from);	

/**
 * Important: If this message changes, it must also be updated in org.openiaml.model.custom.actions.GenerateCodeAction#couldBePhantomEdges()
 */	
context model::Wire ERROR "A Wire must have a 'from'" :
	from != null;

/**
 * Important: If this message changes, it must also be updated in org.openiaml.model.custom.actions.GenerateCodeAction#couldBePhantomEdges()
 */	
context model::Wire ERROR "A Wire must have a 'to'" :
	to != null;

context model::Action ERROR "An Action must have a 'from'" :
	from != null;
context model::Action ERROR "An Action must have a 'to'" :
	to != null;

context model::wires::ExtendsEdge ERROR "A Role cannot extend itself" :
	from != to;

/*
 * isInstance() definitely works in OAW checks for abstract supertypes.
 * if a check isn't working, make sure that you are following the OAW
 * checks logic correctly; the predicate is expected to be _true_,
 * and will only throw an exception if the predicate is false.
 *
 * i.e.: "name != 'single_values'"
 */

context model::operations::OperationCallNode ERROR "An OperationCallNode must have exactly one RunAction connecting it to an Operation" :
	outActions.size == 1
		&& model::wires::RunAction.isInstance(outActions.first())
		&& model::Operation.isInstance(outActions.first().to);

context model::wires::RunAction WARNING "This RunAction will not do anything: consider naming it 'onClick'" :
	!(model::VisibleThing.isInstance(from) && !(name == "click" || name == "onClick"));

context model::Property WARNING "A session property used as part of a login handler should have a default value set, otherwise secure frames will crash with an exception rather than going to the login frame" :
	!(defaultValue == null && inWires.typeSelect(model::wires::SetWire).from.typeSelect(model::components::LoginHandler).size > 0); 

context model::QueryParameter ERROR "A QueryParameter cannot be used on a Frame outside of its containing frame (" + containingFrame(this.eContainer) + ", " + containingFrame(outWires.first().to.eContainer) + ")" :
	outWires.forAll( e | isAccessibleOnFrame(containingFrame(this.eContainer), e.to) );

context model::components::LoginHandler ERROR "A LoginHandler[user] can not have more than one incoming ParameterWire" :
	(type != model::components::LoginHandlerTypes::USER) || inParameterEdges.size <= 1; 

context model::wires::SelectWire ERROR "A SelectWire has incoming Parameters, but does not have a query to use them" :
	inParameterEdges.isEmpty || (query != null && query.length > 0); 

context model::scopes::Session ERROR "A Session can only contain one LoginHandler" :
	elements.typeSelect(model::components::LoginHandler).size <= 1;

context model::visual::Frame ERROR "A Frame cannot contain a LoginHandler" :
	elements.typeSelect(model::components::LoginHandler).size == 0;

context model::CompositeOperation ERROR "An Operation can only contain one StartNode" :
	nodes.typeSelect(model::operations::StartNode).size <= 1;

context model::CompositeCondition ERROR "A Condition can only contain one StartNode" :
	nodes.typeSelect(model::operations::StartNode).size <= 1;

// issue 98: unused PrimitiveOperation names should issue a warning
// issue 136: CompositeOperations should not have this warning
context model::PrimitiveOperation WARNING "Unknown primitive operation name '" + name + "'" :
	model::CompositeOperation.isInstance(this) ||  
	(name == "setPropertyToValue" || name == "set" ||
		name == "javascriptAlert" || name == "save" ||
		name == "new" || name == "exists?" ||
		name == "equal?" || name == "add role" ||
		name == "add permission" || name == "remove role" ||
		name == "remove permission" || name == "check permissions" ||
		(model::VisibleThing.isInstance(eContainer) &&
			(name == "hide" || name == "show")) || 
		name == "true?" || name == "can cast?");

context model::operations::Arithmetic ERROR "Arithmetic must have at least one incoming data source edge" :
	inFlows.size > 0;

context model::PrimitiveOperation ERROR "A 'set' PrimitiveOperation cannot set an ApplicationElementProperty: use 'setPropertyToValue'" :
	name != "set" || outFlows.to.typeSelect(model::Property).size == 0;

context model::PrimitiveOperation ERROR "A 'setPropertyToValue' PrimitiveOperation cannot set a TemporaryVariable: use 'set'" :
	name != "setPropertyToValue" || outFlows.to.typeSelect(model::TemporaryVariable).size == 0;
	
context model::components::EntryGate ERROR "An EntryGate needs to have at least one incoming Condition, or one outgoing 'first' wire, or it will never permit access" :
	inConditionEdges.size >= 1
	|| outWires.typeSelect(model::NamedElement).exists(w | w.name == "first");

context model::components::ExitGate ERROR "An ExitGate needs to have at least one incoming Condition, or one outgoing 'last' wire, or it will never permit access" :
	inConditionEdges.size >= 1
	|| outWires.typeSelect(model::NamedElement).exists(w | w.name == "last");
	
context model::operations::DecisionCondition ERROR "A 'can cast?' decision needs to have an incoming DataFlowEdge from a CastNode" :
	name != "can cast?" || 
	(inFlows.size == 1 && model::operations::CastNode.isInstance(inFlows.first().from));

context model::operations::DecisionOperation ERROR "A 'can cast?' decision needs to have an incoming DataFlowEdge from a CastNode" :
	name != "can cast?" || 
	(inFlows.size == 1 && model::operations::CastNode.isInstance(inFlows.first().from));

context model::operations::CastNode ERROR "A CastNode needs exactly one incoming data flow edge, had: " + inFlows.size :
	inFlows.size == 1;

/**
 * Two types are specified to be incompatible if they are different.
 * TODO this should be changed, because e.g. email is compatible with string in one direction. 
 */
context model::visual::InputTextField ERROR "InputTextField type '" + type.uRI + "' is incompatible with fieldValue type '" + properties.selectFirst(e|e.name == "fieldValue").type.uRI  + "'" :
	type == null ||
	properties.select(e | e.name == "fieldValue").isEmpty ||
	properties.select(e | e.name == "fieldValue").select(e | e.type.uRI != type.uRI).isEmpty;
	
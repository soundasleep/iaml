«IMPORT iaml»

«EXTENSION template::GeneratorExtensions»

«DEFINE instanceSkipPhp FOR model::InternetApplication-»
<?php
/**
 * Skip the given instance pointer.
 */
 
«EXPAND template::Template::commonHeader("", "Domain Instance Skip")»

define('REDIRECT_ON_CLIENT', true);

// include operations, condition definitions
«EXPAND template::Common::commonPHPIncludes»

«EXPAND template::domain::Definitions::domainDefinitions»
«EXPAND template::users::Includes::getInclude FOREACH eAllContents.typeSelect(model::users::Role)-»

log_message("instance_next.php? " . print_r($_GET, true));
$instance_id = require_get("instance_id");
$frame_id = require_get("frame_id");
$arg0 = require_get("arg0");

log_message("instance_skip.php: skipping instance_id=$instance_id by $arg0");

switch ($instance_id) {
«FOREACH eAllContents.typeSelect(model::DomainObjectInstance) AS object»
	case "«safeName(object)-»" :
		 object_instance_skip_«safeName(object)-»($arg0);
		 break;
«ENDFOREACH»
	default:
		die("FAIL No such instance ID $instance_id");
}

// output any instructions
echo "ok";
echo_necessary_update_callbacks();

«EXPAND template::php::callbacks::UpdateFrameProperties::updateAllFrameProperties»

«ENDDEFINE»

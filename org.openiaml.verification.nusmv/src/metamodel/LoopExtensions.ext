import iaml;

safeName(model::GeneratedElement this) :
	if (id == null) then
		throwException("Cannot get the safeName of an element with no ID: " + this)
	else
		safeNameString(id);

safeName(emf::EObject this) :
	throwException("Cannot get the safeName of an EObject: " + this);

safeNameString(String s) :
	s.replaceAll("[^A-Za-z0-9]", "_");

escapeString(String s) :
	s.replaceAll("[\"]", "\\\"");

/** 0 ... <max size> */
maximumIntegerSize() : 15;

/**
 * Get all of the buttons on a particular page.
 */
allButtonsOnPage(model::visual::Page this) :
	eAllContents.typeSelect(model::visual::Button);

/** get all failing edges */
getFailFlow(model::ExecutionEdgesSource this) :
	outExecutions.select(e | e.name.toLowerCase().startsWith("f") 
		|| e.name.toLowerCase().startsWith("n"));

/** get all passing edges */
getPassFlow(model::ExecutionEdgesSource this) :
	outExecutions.reject(e | getFailFlow(this).contains(e)) ;

selectStartNode(model::CompositeOperation this) :
	nodes.typeSelect(model::operations::StartNode).first() ;

selectStartNode(model::CompositeCondition this) :
	nodes.typeSelect(model::operations::StartNode).first() ;

/*
 * all application properties stored in the InternetApplication; i.e.
 * those outside Sessions. 
 */
List[model::ApplicationElementProperty] allApplicationProperties(model::InternetApplication this) :
	properties.toSet().union( children.typeSelect(model::visual::Page).collect(e|allApplicationProperties(e)).flatten());

List[model::ApplicationElementProperty] allApplicationProperties(model::visual::Page this) :
	properties.toSet().union( children.typeSelect(model::visual::Page).collect(e|allApplicationProperties(e)).flatten());

model::InternetApplication getRoot(model::InternetApplication this) :
	this;
model::InternetApplication getRoot(model::NamedElement this) :
	getRoot(eContainer);
model::InternetApplication getRoot(emf::EObject this) :
	null;
	
inConditionWires(model::WireEdgeDestination this) :
	inEdges.typeSelect(model::wires::ConditionWire);

/** 
 * a hack way to create backtrace-able errors
 * based on http://www.openarchitectureware.org/forum/viewtopic.php?showtopic=5540
 * to use: «EXPAND exception FOR throwException("Your message goes here")»
 * AND add this anywhere in your template file: (very important)

«DEFINE exception FOR Object»
«ENDDEFINE»
   
 */
String throwException(String message) :
	JAVA org.openiaml.verification.nusmv.oaw.OAWGenerator.throwException(java.lang.String);
	
«IMPORT iaml»

/**
 * Parameters for operations.
 */
«EXTENSION template::GeneratorExtensions»

/**
 * Parameter definitions within the signature of an operation/method.
 */
«DEFINE signatures(Boolean php) FOR model::Parameter-»
	«IF php»
		$«safeName()-»
	«ELSE»
		«safeName()-»
	«ENDIF»
«ENDDEFINE»

/**
 * Parameters as part of an operation call.
 */
«DEFINE callParameter(Boolean php, model::WireEdge wire, Boolean inStoreDb) FOR model::wires::ParameterWire»
	«EXPAND callParameterValue(php, wire, inStoreDb) FOR from»
«ENDDEFINE»

/**
 * The sources of parameters for parameter calls, i.e.
 * fetch the runtime value of the parameter.
 */
«DEFINE callParameterValue(Boolean php, model::WireEdge wire, Boolean inStoreDb) FOR model::WireEdgesSource»
	«EXPAND exception FOR throwException("Unknown parameter wire source: " + this)»
«ENDDEFINE»

«DEFINE callParameterValue(Boolean php, model::WireEdge wire, Boolean inStoreDb) FOR model::ApplicationElementProperty»
	«IF php»
		«IF inStoreDb»
			$arg0 /* we assume the value is already in $arg0; see store_db.php::expandDomainAttributeEvents */
		«ELSE»
			«REM»
				values stored in sessions will not always be called 'fieldValue';
				perhaps fieldValue is only those stored as part of InputTextFields, etc.
			«ENDREM»
			«IF model::DomainAttributeInstance.isInstance(eContainer)»
				«REM»from a DomainAttributeInstance«ENDREM»
				«EXPAND RemoteParameter::remoteValue(php, false, wire, this) FOR this.eContainer-»
			«ELSEIF containingSession(this) != null»
				/* a property from our session */
				require_session("«safeName(containingSession(this))»_«safeName()-»"
				«IF defaultValue != null»
					, "«defaultValue»"
				«ENDIF»
				)
			«ELSE»
				get_application_value("«safeName()-»", 
					«IF defaultValue != null»
						"«defaultValue»"
					«ELSE»
						null
					«ENDIF»
				)		
			«ENDIF»
		«ENDIF»
	«ELSE»
		«IF inStoreDb»
			value
		«ELSE»
			/* wire = «wire», from = «wire.from», to = «wire.to» */
			«IF name == "fieldValue"»
				«REM»where is this value stored? is it available on the current page?«ENDREM»
				«IF model::DomainAttributeInstance.isInstance(eContainer)»
					«REM»from a DomainAttributeInstance«ENDREM»
					«EXPAND RemoteParameter::remoteValue(php, false, wire, this) FOR this.eContainer-»
				«ELSEIF onCurrentPage(wire.from, this)» 
					document.getElementById('«safeName(eContainer)»').value
				«ELSE»
					«REM»
						it's not on the current page. it could be anywhere!
						but we want it NOW, so we can't just ask the 
						server. we have to find out where it is.
					«ENDREM»			
					«EXPAND RemoteParameter::remoteValue(php, false, wire, this) FOR this.eContainer-»
				«ENDIF»
			«ELSE»
				get_application_element_property("«safeName()-»")
			«ENDIF»
		«ENDIF»
	«ENDIF»
«ENDDEFINE»

/**
 * If we have a Parameter from a TextField, we should use its 'fieldValue' property instead.
 */
«DEFINE callParameterValue(Boolean php, model::WireEdge wire, Boolean inStoreDb) FOR model::visual::InputTextField»
	«IF php»
		/* implicitly from InputTextField */
		«EXPAND callParameterValue(php, wire, inStoreDb) FOR properties.select( e | e.name == "fieldValue" ).first()-»
	«ELSE»
		«IF getFieldValue(this) != null»
			«EXPAND callParameterValue(php, wire, false) FOR getFieldValue(this)»
		«ELSE»
			«EXPAND exception FOR throwException("No 'fieldValue' property found in the InputTextField '" + this + "', which is being used as a Parameter source.")»
		«ENDIF» 
	«ENDIF»
«ENDDEFINE»

«DEFINE callParameterValue(Boolean php, model::WireEdge wire, Boolean inStoreDb) FOR model::StaticValue»
	"«value-»" /* static value "«name-»" */
«ENDDEFINE»

«DEFINE callParameterValue(Boolean php, model::WireEdge wire, Boolean inStoreDb) FOR model::DynamicApplicationElementSet»
	/* dynamic element set "«name-»" */
	get_dynamic_elements_«safeName()-»()
«ENDDEFINE»

«DEFINE callParameterValue(Boolean php, model::WireEdge wire, Boolean inStoreDb) FOR model::visual::Page»
	/* Page "«name-»" */
	new Visual_Page("«id-»", "«name-»")
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»

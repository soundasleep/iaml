«IMPORT iaml»

«EXTENSION template::GeneratorExtensions»

/**
 * PHP code for creating the domain store.
 */
«DEFINE createDomainStorePhp FOR model::domain::AbstractDomainStore»
	«EXPAND exception FOR throwException("Cannot expand createDomainStorePhp for AbstractDomainStore " + this)»
«ENDDEFINE»

«DEFINE createDomainStorePhp FOR model::DomainStore»
	// DomainStore "«name»"

	// first, make sure the table exists
	$db = new PDO('sqlite:«safeName()».db') or throw_new_IamlRuntimeException("could not open db '«safeName()».db'");
	
	// now cycle through all DomainObjects in this DomainStore to create each of them
	«EXPAND createDomainObjectPhp FOREACH children»

	// sole attributes
	«IF attributes.size > 0»
		$s = $db->prepare("SELECT * FROM single_values");
		if (!$s) {
			// create the table
			$q = $db->query("CREATE TABLE single_values (
					«EXPAND createDomainAttributePhp FOREACH attributes SEPARATOR ", "»
				);") or throw_new_IamlRuntimeException("could not create single_values table: " . print_r($db->errorInfo(), true));
		}	
	«ENDIF»
	
	// close connection
	$db = null;
«ENDDEFINE»

«DEFINE createDomainStorePhp FOR model::domain::FileDomainStore»
	// FileDomainStore "«name»"
	// we don't need to create anything, it is handled automatically
«ENDDEFINE»

/**
 * Expand a DomainObject into a SQL table.
 */ 
«DEFINE createDomainObjectPhp FOR model::domain::AbstractDomainObject»
	«EXPAND exception FOR throwException("Cannot expand createDomainObjectPhp for AbstractDomainObject " + this)»
«ENDDEFINE»

«DEFINE createDomainObjectPhp FOR model::DomainObject»
	$s = $db->prepare("SELECT * FROM «safeNameString(name)»");
	if (!$s) {
		// create the table
		$q = $db->query("CREATE TABLE «safeNameString(name)» (
				«EXPAND createDomainAttributePhp FOREACH attributes SEPARATOR ", "»
			);") or throw_new_IamlRuntimeException("could not create table: " . print_r($db->errorInfo(), true));
	}
«ENDDEFINE»

/* if an InternetApplication directly contains an AbstractObject,
   we still process it anyway. */
«DEFINE createDomainObjectPhp_Root FOR model::ApplicationElement»
«ENDDEFINE»

«DEFINE createDomainObjectPhp_Root FOR model::DomainObject»
	// root DomainObject "«name»"

	// first, make sure the table exists
	$db = new PDO('sqlite:internet_application.db') or throw_new_IamlRuntimeException("could not open db '«safeName()».db'");
	
	// now cycle through this DomainObject
	«EXPAND createDomainObjectPhp FOR this»
	
	// close connection
	$db = null;
«ENDDEFINE»

«DEFINE createDomainObjectPhp_Root FOR model::domain::FileDomainObject»
	// FileDomainObject "«name»"
	// we don't need to create anything, it is handled automatically
«ENDDEFINE»

/**
 * Expand a DomainAttribute into a SQL row.
 */
«DEFINE createDomainAttributePhp FOR model::domain::AbstractDomainAttribute»
	«EXPAND exception FOR throwException("Cannot expand createDomainAttributePhp for AbstractDomainAttribute " + this)»
«ENDDEFINE»

«DEFINE createDomainAttributePhp FOR model::DomainAttribute»
	«safeNameString(name)» VARCHAR(255) NULL
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»
<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>

	<!-- missing shortcuts for visual -->
	<!-- Q: will having two providers for the same superclass (VisibleThing <- ApplicationElement) cause problems? -->
	<!-- A: no. either getElement() is very specific (ignores supertypes) or its done in order. -->
	<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
	  <editpartProvider class="org.openiaml.model.diagram.custom.edit.providers.CustomVisualEditPartProvider">
	    <Priority name="Low" />
	    <object class="org.eclipse.gmf.runtime.notation.Diagram" id="MyOverride">
	      <method name="getElement()">
	        <value class="org.openiaml.model.model.VisibleThing"/>
	      </method>
	    </object>
	    <context
           views="MyOverride"/>
	  </editpartProvider>
	</extension>

	<!-- missing shortcuts for root -->
	<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
	  <editpartProvider class="org.openiaml.model.diagram.custom.edit.providers.CustomRootEditPartProvider">
	    <Priority name="Low" />
	    <object class="org.eclipse.gmf.runtime.notation.Diagram" id="MyOverride">
	      <method name="getElement()">
	        <value class="org.openiaml.model.model.InternetApplication"/>
	      </method>
	    </object>
	    <context
           views="MyOverride"/>
	  </editpartProvider>
	</extension>

	<!-- missing shortcuts for wire -->
	<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
	  <editpartProvider class="org.openiaml.model.diagram.custom.edit.providers.CustomWireEditPartProvider">
	    <Priority name="Low" />
	    <object class="org.eclipse.gmf.runtime.notation.Diagram" id="MyOverride">
	      <method name="getElement()">
	        <value class="org.openiaml.model.model.wires.CompositeWire"/>
	      </method>
	    </object>
	    <context
           views="MyOverride"/>
	  </editpartProvider>
	</extension>

	<!-- missing shortcuts for domain_store -->
	<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
	  <editpartProvider class="org.openiaml.model.diagram.custom.edit.providers.CustomDomainStoreEditPartProvider">
	    <Priority name="Low" />
	    <object class="org.eclipse.gmf.runtime.notation.Diagram" id="MyOverride">
	      <method name="getElement()">
	        <value class="org.openiaml.model.model.DomainStore"/>
	      </method>
	    </object>
	    <context
           views="MyOverride"/>
	  </editpartProvider>
	</extension>

	<!-- missing shortcuts for domain object -->
	<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
	  <editpartProvider class="org.openiaml.model.diagram.custom.edit.providers.CustomDomainObjectEditPartProvider">
	    <Priority name="Low" />
	    <object class="org.eclipse.gmf.runtime.notation.Diagram" id="MyOverride">
	      <method name="getElement()">
	        <value class="org.openiaml.model.model.DomainObject"/>
	      </method>
	    </object>
	    <context
           views="MyOverride"/>
	  </editpartProvider>
	</extension>
	
	<!-- missing shortcuts for composite object -->
	<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
	  <editpartProvider class="org.openiaml.model.diagram.custom.edit.providers.CustomOperationEditPartProvider">
	    <Priority name="Low" />
	    <object class="org.eclipse.gmf.runtime.notation.Diagram" id="MyOverride">
	      <method name="getElement()">
	        <value class="org.openiaml.model.model.CompositeOperation"/>
	      </method>
	    </object>
	    <context
           views="MyOverride"/>
	  </editpartProvider>
	</extension>
	
	<!-- missing shortcuts for element -->
	<!-- I think we need to place this last so it is the provider of last resort -->
	<extension point="org.eclipse.gmf.runtime.diagram.ui.editpartProviders">
	  <editpartProvider class="org.openiaml.model.diagram.custom.edit.providers.CustomElementEditPartProvider">
	    <Priority name="Low" />
	    <object class="org.eclipse.gmf.runtime.notation.Diagram" id="MyOverride">
	      <method name="getElement()">
	        <value class="org.openiaml.model.model.ApplicationElement"/>
	      </method>
	    </object>
	    <context
           views="MyOverride"/>
	  </editpartProvider>
	</extension>
	
	<!-- .iaml_diagram file extensions -->
	<extension point="org.eclipse.ui.popupMenus">
     
      <objectContribution
            adaptable="false"
            id="org.openiaml.model.codegen.objectContribution2"
            nameFilter="*.iaml_diagram"
            objectClass="org.eclipse.core.resources.IResource">

         <menu
               id="org.openiaml.model.diagram.custom.menu2"
               path="additions"
               label="&amp;IAML Diagram Tools">
            <separator
                  name="group">
            </separator>
         </menu>

		<!-- more than one popup extension is displayed in reverse order:
		     a documented bug of eclipse -->

         <action
               class="org.openiaml.model.diagram.custom.actions.ExportImagePartsAction"
               id="org.openiaml.model.diagram.custom.menu2.action1"
               label="&amp;Export all diagram parts to PNG images"
               menubarPath="org.openiaml.model.diagram.custom.menu2/group">
         </action>

      </objectContribution>
      
	</extension>

	<!-- add a 'refresh mappings' command to FileDomainStore elements -->
	<!-- following http://wiki.eclipse.org/GMF_Tutorial_Part_3 -->
		
	<extension point="org.eclipse.ui.commands">
		<category name="IAML" description="Commands related to IAML diagrams." 
			id="org.openiaml.model.diagram.custom.commands.iaml"/>
		<command categoryId="org.openiaml.model.diagram.custom.commands.iaml" 
			description="Refreshes the mappings of DomainStore elements" 
			id="org.openiaml.model.diagram.custom.commands.iaml.refresh"
			name="Refresh mappings">
		</command>
	</extension>
	
	<extension point="org.eclipse.ui.popupMenus">
      <objectContribution
            adaptable="false"
            id="org.openiaml.model.diagram.custom.commands.iaml.refresh.menu"
            objectClass="org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart">
         <menu 
            id="ModelActions" 
            label="&amp;IAML Model" 
            path="actions"> 
            <separator name="group1" />
         </menu>
         
         <!-- TODO most of these actions refer specifically to a given editor ID (e.g. visual.DomainStoreEditPart); need to make them non-specific -->
         <action
               class="org.openiaml.model.diagram.custom.actions.RefreshDomainStoreMappingsWithDrools"
               enablesFor="1"
               id="org.openiaml.model.diagram.custom.actions.refresh1"
               label="Refresh all &amp;DomainStore Mappings"
               menubarPath="ModelActions/group1">
			 <selection class="org.openiaml.model.model.diagram.edit.parts.DomainStoreEditPart">
			 </selection>
         </action>

         <action
               class="org.openiaml.model.diagram.custom.actions.RefreshObjectInstanceMappingsWithDrools"
               enablesFor="1"
               id="org.openiaml.model.diagram.custom.actions.refresh2"
               label="Refresh all Domain&amp;ObjectInstance Mappings"
               menubarPath="ModelActions/group1">
			 <selection class="org.openiaml.model.model.diagram.visual.edit.parts.DomainObjectInstanceEditPart">
			 </selection>
         </action>

         <action
               class="org.openiaml.model.diagram.custom.actions.RefreshFormMappingsWithDrools"
               enablesFor="1"
               id="org.openiaml.model.diagram.custom.actions.refresh3"
               label="Refresh all &amp;Form Mappings"
               menubarPath="ModelActions/group1">
			 <selection class="org.openiaml.model.model.diagram.visual.edit.parts.InputFormEditPart">
			 </selection>
         </action>

         <action
               class="org.openiaml.model.diagram.custom.actions.InferContainedElementsAction"
               enablesFor="1"
               id="org.openiaml.model.diagram.custom.actions.contained"
               label="&amp;Infer only contained elements"
               menubarPath="ModelActions/group1">
			 <selection class="org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart">
			 </selection>
         </action>
         <visibility>
            <or>
               <objectClass
                     name="org.eclipse.gmf.runtime.diagram.ui.editparts.DiagramEditPart">
               </objectClass>
               <objectClass
                     name="org.eclipse.gmf.runtime.diagram.ui.editparts.TopGraphicEditPart">
               </objectClass>
            </or>
         </visibility>
         <action
               class="org.openiaml.model.diagram.custom.actions.MoveIntoSeparateModelAction"
               enablesFor="1"
               id="org.openiaml.model.diagram.custom.actions.move"
               label="Mo&amp;ve into separate model"
               menubarPath="ModelActions/group1">
            <selection
                  class="org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart">
            </selection>
         </action>
         
      </objectContribution>                    
	</extension>

</plugin>

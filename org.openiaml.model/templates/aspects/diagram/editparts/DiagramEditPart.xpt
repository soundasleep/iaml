/**
 * Add support for breadcrumbs.
 */
«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»

/**
 * We have to redefine the entire command, because there are no
 * extension points which we can use.
 *
 * NOTE: [IF shouldGenerateDiagramViewmap()] was deleted
 */
«AROUND additions FOR gmfgen::GenDiagram-»
	«targetDef.proceed()»

	«EXPAND xpt::Common::generatedMemberComment»
	protected org.eclipse.draw2d.IFigure createFigure() {
		org.eclipse.draw2d.IFigure fig = super.createFigure();
		
		final org.eclipse.draw2d.Label label = new org.eclipse.draw2d.Label(getBreadcrumb());
		label.setFont(BREADCRUMB_FONT);		// need to set font before calculating dimensions
		label.setForegroundColor( new org.eclipse.swt.graphics.Color(null, 60, 60, 60) );
		label.setBounds( new org.eclipse.draw2d.geometry.Rectangle( 0, 0, 1024, 20 ));	// maximum size for calculating size
		label.setBounds( new org.eclipse.draw2d.geometry.Rectangle( 4, 4, label.getPreferredSize().width, label.getPreferredSize().height ) );	// resize to actual prefered size
		fig.add(label);

		fig.addLayoutListener(new org.eclipse.draw2d.LayoutListener.Stub() {

			«EXPAND xpt::Common::generatedMemberComment»
			@Override
			public void invalidate(org.eclipse.draw2d.IFigure container) {
				String text = getBreadcrumb();
				if (!text.equals(label.getText())) {
					label.setText( getBreadcrumb() );
					label.setBounds( new org.eclipse.draw2d.geometry.Rectangle( 0, 0, 1024, 20 ));	// maximum size for calculating size
					label.setBounds( new org.eclipse.draw2d.geometry.Rectangle( 4, 4, label.getPreferredSize().width, label.getPreferredSize().height ) );	// resize to actual prefered size
				}
			}

			«EXPAND xpt::Common::generatedMemberComment»
			@Override
			public void postLayout(org.eclipse.draw2d.IFigure container) {
				String text = getBreadcrumb();
				if (!text.equals(label.getText())) {
					label.setText( getBreadcrumb() );
					label.setBounds( new org.eclipse.draw2d.geometry.Rectangle( 0, 0, 1024, 20 ));	// maximum size for calculating size
					label.setBounds( new org.eclipse.draw2d.geometry.Rectangle( 4, 4, label.getPreferredSize().width, label.getPreferredSize().height ) );	// resize to actual prefered size
				}
			}
			
			
		});
		return fig;	
	}

	«EXPAND xpt::Common::generatedMemberComment»
	static final org.eclipse.swt.graphics.Font BREADCRUMB_FONT = new org.eclipse.swt.graphics.Font(org.eclipse.swt.widgets.Display.getCurrent(), "Arial", 9,
			org.eclipse.swt.SWT.NORMAL);

	«EXPAND xpt::Common::generatedMemberComment»
	public String getBreadcrumb() {
		org.eclipse.emf.ecore.EObject target = ((org.eclipse.gmf.runtime.notation.Diagram) getModel()).getElement();
		return org.openiaml.model.diagramextensions.IamlBreadcrumb.breadcrumb(target, 3);
	}
	
«ENDAROUND»

«IMPORT iaml»

«EXTENSION template::GeneratorExtensions»

«DEFINE removeRolePhp FOR model::InternetApplication-»
<?php
/**
 * Remove a role from a given user instance.
 */
 
«EXPAND template::Template::commonHeader("", "Remove Role")»

«EXPAND template::domain::Definitions::domainDefinitions»
«EXPAND template::users::Includes::getInclude FOREACH eAllContents.typeSelect(model::users::Role)-»

log_message("remove_role.php? " . print_r($_GET, true));
$role_id = require_get("role_id");
$instance_id = require_get("instance_id");

log_message("remove_role.php: removing role_id=$role_id, instance_id=$instance_id");

$iterator = null;
switch ($instance_id) {
«FOREACH eAllContents.typeSelect(model::users::UserInstance) AS u»
	case "«safeName(u)»":
		$iterator = DomainIterator_«safeName(u)»::getInstance();
		break;

«ENDFOREACH»
	default:
		throw new IamlRuntimeException("No such User Instance ID $instance_id");
}

// TODO probably a security risk
$function_name = 'remove_role_' . $role_id;
log_message("remove_role.php: calling $function_name");
$function_name($iterator);

// output any instructions
echo "ok";
echo_necessary_update_callbacks();

«ENDDEFINE»

<?xml version="1.0"?>
<!-- build script based on sample Tomcat build script:
	http://tomcat.apache.org/tomcat-4.1-doc/appdev/build.xml.txt -->
<project name="My Project" default="diagram" basedir=".">

<property name="build.home" value="${basedir}/build" />
<property name="src.home" value="${basedir}/src" />
<property name="eclipse.home" value="c:/eclipse-33-2" />

<!--

  These properties control option settings on the Javac compiler when it
  is invoked using the <javac> task.

  compile.debug        Should compilation include the debug option?

  compile.deprecation  Should compilation include the deprecation option?

  compile.optimize     Should compilation include the optimize option?

-->
<property name="compile.debug"       value="true"/>
<property name="compile.deprecation" value="false"/>
<property name="compile.optimize"    value="true"/>

<path id="compile.classpath">

<!-- Include all JAR files that will be included in /WEB-INF/lib -->
<!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
<!--
    <pathelement location="${foo.jar}"/>
-->

<!-- Include all elements that Tomcat exposes to applications -->
	<!--
<pathelement location="${catalina.home}/common/classes"/>
<fileset dir="${catalina.home}/common/endorsed">
  <include name="*.jar"/>
</fileset>
<fileset dir="${catalina.home}/common/lib">
  <include name="*.jar"/>
</fileset>
<pathelement location="${catalina.home}/shared/classes"/>
<fileset dir="${catalina.home}/shared/lib">
  <include name="*.jar"/>
</fileset>
-->

</path>
	
<target name="all" depends="clean" description="TODO"/>

<target name="clean" description="Delete old build">
	<delete dir="trunk" />
</target>

<target name="prepare"
		depends="checkout">
</target>

<path id="svntask">
	<pathelement location="lib/svnant/lib/svnant.jar"/>
	<pathelement location="lib/svnant/lib/svnClientAdapter.jar"/>
</path>

<path id="eclipse-path">
	<fileset dir="${eclipse.home}/plugins">
		<include name="**/*.jar"/>
	</fileset>
	<pathelement location="${eclipse.home}/plugins/ca.ecliptical.gmf.ant_0.9.0.20090407143246/ant-tasks.jar"/>
	<pathelement location="${eclipse.home}/plugins/ca.ecliptical.gmf.ant_0.9.0.20090407143246/ant.jar"/>
</path>

<path id="my-tasks-path">
	<fileset dir="${eclipse.home}/plugins">
		<include name="**/*.jar"/>
	</fileset>
	<pathelement location="${eclipse.home}/plugins/ca.ecliptical.gmf.ant_0.9.0.20090407143246/ant-tasks.jar"/>
	<pathelement location="${eclipse.home}/plugins/ca.ecliptical.gmf.ant_0.9.0.20090407143246/ant.jar"/>
	<fileset dir="build/tasks">
		<include name="**/*.class"/>
	</fileset>
</path>
	
<target name="checkout" description="Check out trunk from SVN">
	<!-- svnant: http://subclipse.tigris.org/svnant/svn.html -->
	<typedef resource="org/tigris/subversion/svnant/svnantlib.xml" classpathref="svntask" /> 
	<svn javahl="${javahl}">
		<checkout url="http://iaml.googlecode.com/svn/trunk/" destPath="trunk" />
	</svn> 
</target>
	
<target name="diagram" depends="compile-my-tasks" description="Generate diagram code from gmfgen">
	<!--
	classname="ca.ecliptical.gmf.ant.tasks.GenerateDiagramCode"
	-->
	<typedef name="MyGenerateDiagramCode"
		classpathref="my-tasks-path"
			classname="org.openiaml.build.MyGenerateDiagramCode"
		classpath="build/tasks"/>
	<MyGenerateDiagramCode 
		ignoreValidationErrors="true"
		gmfgenPath="../org.openiaml.model/model/condition.gmfgen" />
</target>

<target name="compile-my-tasks">

	<!-- Compile Java classes as necessary -->
	<mkdir dir="build/tasks"/>
	<javac srcdir="src"
	      destdir="build/tasks"
	        debug="${compile.debug}"
	  deprecation="${compile.deprecation}"
	     optimize="${compile.optimize}">
	    <classpath refid="eclipse-path"/>
	</javac>
	
	<!-- Copy application resources -->
	<!--
	<copy todir="${build.home}/WEB-INF/classes">
	  <fileset dir="${src.home}" excludes="**/*.java"/>
	</copy>
	-->

</target>
	
<target name="compile" depends="prepare"
   description="Compile Java sources">

	<!-- Compile Java classes as necessary -->
	<mkdir dir="${build.home}/WEB-INF/classes"/>
	<javac srcdir="${src.home}"
	      destdir="${build.home}/WEB-INF/classes"
	        debug="${compile.debug}"
	  deprecation="${compile.deprecation}"
	     optimize="${compile.optimize}">
	    <classpath refid="compile.classpath"/>
	</javac>
	
	<!-- Copy application resources -->
	<!--
	<copy todir="${build.home}/WEB-INF/classes">
	  <fileset dir="${src.home}" excludes="**/*.java"/>
	</copy>
	-->

</target>
	
</project>
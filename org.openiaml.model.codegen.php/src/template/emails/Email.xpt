«IMPORT iaml»

/**
 * Code behind Emails.
 *
 */
«EXTENSION template::GeneratorExtensions»

/**
 * Domain instance methods.
 */
«DEFINE emailOperationCall(Boolean php, model::ECARule wire, model::messaging::Email email) FOR model::WireDestination»
	«throwException("Unexpected emailOperationCall run instance wire destination: " + this)»
«ENDDEFINE»

«DEFINE emailOperationCall(Boolean php, model::ECARule wire, model::messaging::Email email) FOR model::Action»
	«throwException("Unexpected emailOperationCall run instance action destination: " + this)»
«ENDDEFINE»

«DEFINE emailOperationCall(Boolean php, model::ECARule wire, model::messaging::Email email) FOR model::Operation»
	«REM»drop the 'wire' parameter«ENDREM»
	«EXPAND actualEmailOperationCall(php, email)» 
«ENDDEFINE»

/**
 * @implementation Email,BuiltinOperation
 *		An {@model Email} has a {@model BuiltinOperation} named 'send'. 
 */
«DEFINE actualEmailOperationCall(Boolean php, model::messaging::Email email) FOR model::Operation»
	«IF php»
		«IF name=="send"»
			«REM»
				the AccessControlHandler will have an incoming ParameterWire
				with the UserInstance in which to validate against
			«ENDREM»
			email_«safeName(email)-»_send()
		«ELSE»
			«throwException("No server-side code for emailOperationCall operation '" + name + "'")»
		«ENDIF»
	«ELSE»
		«IF name=="send"»
			/* ask the server to send the e-mail */
			
			queued_email_send('«safeName(email)»')
		«ELSE»
			«throwException("No client-side code for emailOperationCall operation '" + name + "'")»
		«ENDIF»
	«ENDIF» 
«ENDDEFINE»


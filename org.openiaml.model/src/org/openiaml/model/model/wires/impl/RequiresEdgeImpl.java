/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.openiaml.model.model.wires.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;
import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.EObjectImpl;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.EObjectWithInverseResolvingEList;
import org.eclipse.emf.ecore.util.InternalEList;
import org.openiaml.model.model.ContainsWires;
import org.openiaml.model.model.GeneratesElements;
import org.openiaml.model.model.ModelPackage;
import org.openiaml.model.model.Wire;
import org.openiaml.model.model.users.RequiresEdgeDestination;
import org.openiaml.model.model.users.RequiresEdgesSource;
import org.openiaml.model.model.users.UsersPackage;
import org.openiaml.model.model.wires.ConditionEdge;
import org.openiaml.model.model.wires.ConstraintEdge;
import org.openiaml.model.model.wires.ConstraintEdgeDestination;
import org.openiaml.model.model.wires.ConstraintEdgesSource;
import org.openiaml.model.model.wires.ExtendsEdge;
import org.openiaml.model.model.wires.ParameterEdge;
import org.openiaml.model.model.wires.ProvidesEdge;
import org.openiaml.model.model.wires.RequiresEdge;
import org.openiaml.model.model.wires.WiresPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Requires Edge</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getGeneratedBy <em>Generated By</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#isIsGenerated <em>Is Generated</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getGeneratedRule <em>Generated Rule</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getOutConstraintEdges <em>Out Constraint Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getInConstraintEdges <em>In Constraint Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getWires <em>Wires</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getParameterEdges <em>Parameter Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getExtendsEdges <em>Extends Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getRequiresEdges <em>Requires Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getProvidesEdges <em>Provides Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getConstraintEdges <em>Constraint Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getConditionEdges <em>Condition Edges</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getFrom <em>From</em>}</li>
 *   <li>{@link org.openiaml.model.model.wires.impl.RequiresEdgeImpl#getTo <em>To</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class RequiresEdgeImpl extends EObjectImpl implements RequiresEdge {
	/**
	 * The cached value of the '{@link #getGeneratedBy() <em>Generated By</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGeneratedBy()
	 * @generated
	 * @ordered
	 */
	protected EList<GeneratesElements> generatedBy;

	/**
	 * The default value of the '{@link #isIsGenerated() <em>Is Generated</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isIsGenerated()
	 * @generated
	 * @ordered
	 */
	protected static final boolean IS_GENERATED_EDEFAULT = false;

	/**
	 * The cached value of the '{@link #isIsGenerated() <em>Is Generated</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #isIsGenerated()
	 * @generated
	 * @ordered
	 */
	protected boolean isGenerated = IS_GENERATED_EDEFAULT;

	/**
	 * The default value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected static final String ID_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getId()
	 * @generated
	 * @ordered
	 */
	protected String id = ID_EDEFAULT;

	/**
	 * The default value of the '{@link #getGeneratedRule() <em>Generated Rule</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGeneratedRule()
	 * @generated
	 * @ordered
	 */
	protected static final String GENERATED_RULE_EDEFAULT = null;

	/**
	 * The cached value of the '{@link #getGeneratedRule() <em>Generated Rule</em>}' attribute.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getGeneratedRule()
	 * @generated
	 * @ordered
	 */
	protected String generatedRule = GENERATED_RULE_EDEFAULT;

	/**
	 * The cached value of the '{@link #getOutConstraintEdges() <em>Out Constraint Edges</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getOutConstraintEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<ConstraintEdge> outConstraintEdges;

	/**
	 * The cached value of the '{@link #getInConstraintEdges() <em>In Constraint Edges</em>}' reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getInConstraintEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<ConstraintEdge> inConstraintEdges;

	/**
	 * The cached value of the '{@link #getWires() <em>Wires</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getWires()
	 * @generated
	 * @ordered
	 */
	protected EList<Wire> wires;

	/**
	 * The cached value of the '{@link #getParameterEdges() <em>Parameter Edges</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getParameterEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<ParameterEdge> parameterEdges;

	/**
	 * The cached value of the '{@link #getExtendsEdges() <em>Extends Edges</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getExtendsEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<ExtendsEdge> extendsEdges;

	/**
	 * The cached value of the '{@link #getRequiresEdges() <em>Requires Edges</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getRequiresEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<RequiresEdge> requiresEdges;

	/**
	 * The cached value of the '{@link #getProvidesEdges() <em>Provides Edges</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getProvidesEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<ProvidesEdge> providesEdges;

	/**
	 * The cached value of the '{@link #getConstraintEdges() <em>Constraint Edges</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getConstraintEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<ConstraintEdge> constraintEdges;

	/**
	 * The cached value of the '{@link #getConditionEdges() <em>Condition Edges</em>}' containment reference list.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getConditionEdges()
	 * @generated
	 * @ordered
	 */
	protected EList<ConditionEdge> conditionEdges;

	/**
	 * The cached value of the '{@link #getFrom() <em>From</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getFrom()
	 * @generated
	 * @ordered
	 */
	protected RequiresEdgesSource from;

	/**
	 * The cached value of the '{@link #getTo() <em>To</em>}' reference.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @see #getTo()
	 * @generated
	 * @ordered
	 */
	protected RequiresEdgeDestination to;

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RequiresEdgeImpl() {
		super();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	protected EClass eStaticClass() {
		return WiresPackage.Literals.REQUIRES_EDGE;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<GeneratesElements> getGeneratedBy() {
		if (generatedBy == null) {
			generatedBy = new EObjectWithInverseResolvingEList.ManyInverse<GeneratesElements>(GeneratesElements.class, this, WiresPackage.REQUIRES_EDGE__GENERATED_BY, ModelPackage.GENERATES_ELEMENTS__GENERATED_ELEMENTS);
		}
		return generatedBy;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public boolean isIsGenerated() {
		return isGenerated;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setIsGenerated(boolean newIsGenerated) {
		boolean oldIsGenerated = isGenerated;
		isGenerated = newIsGenerated;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, WiresPackage.REQUIRES_EDGE__IS_GENERATED, oldIsGenerated, isGenerated));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getId() {
		return id;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setId(String newId) {
		String oldId = id;
		id = newId;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, WiresPackage.REQUIRES_EDGE__ID, oldId, id));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public String getGeneratedRule() {
		return generatedRule;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setGeneratedRule(String newGeneratedRule) {
		String oldGeneratedRule = generatedRule;
		generatedRule = newGeneratedRule;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, WiresPackage.REQUIRES_EDGE__GENERATED_RULE, oldGeneratedRule, generatedRule));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ConstraintEdge> getOutConstraintEdges() {
		if (outConstraintEdges == null) {
			outConstraintEdges = new EObjectWithInverseResolvingEList<ConstraintEdge>(ConstraintEdge.class, this, WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES, WiresPackage.CONSTRAINT_EDGE__FROM);
		}
		return outConstraintEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ConstraintEdge> getInConstraintEdges() {
		if (inConstraintEdges == null) {
			inConstraintEdges = new EObjectWithInverseResolvingEList<ConstraintEdge>(ConstraintEdge.class, this, WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES, WiresPackage.CONSTRAINT_EDGE__TO);
		}
		return inConstraintEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<Wire> getWires() {
		if (wires == null) {
			wires = new EObjectContainmentEList<Wire>(Wire.class, this, WiresPackage.REQUIRES_EDGE__WIRES);
		}
		return wires;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ParameterEdge> getParameterEdges() {
		if (parameterEdges == null) {
			parameterEdges = new EObjectContainmentEList<ParameterEdge>(ParameterEdge.class, this, WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES);
		}
		return parameterEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ExtendsEdge> getExtendsEdges() {
		if (extendsEdges == null) {
			extendsEdges = new EObjectContainmentEList<ExtendsEdge>(ExtendsEdge.class, this, WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES);
		}
		return extendsEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<RequiresEdge> getRequiresEdges() {
		if (requiresEdges == null) {
			requiresEdges = new EObjectContainmentEList<RequiresEdge>(RequiresEdge.class, this, WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES);
		}
		return requiresEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ProvidesEdge> getProvidesEdges() {
		if (providesEdges == null) {
			providesEdges = new EObjectContainmentEList<ProvidesEdge>(ProvidesEdge.class, this, WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES);
		}
		return providesEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ConstraintEdge> getConstraintEdges() {
		if (constraintEdges == null) {
			constraintEdges = new EObjectContainmentEList<ConstraintEdge>(ConstraintEdge.class, this, WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES);
		}
		return constraintEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public EList<ConditionEdge> getConditionEdges() {
		if (conditionEdges == null) {
			conditionEdges = new EObjectContainmentEList<ConditionEdge>(ConditionEdge.class, this, WiresPackage.REQUIRES_EDGE__CONDITION_EDGES);
		}
		return conditionEdges;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RequiresEdgesSource getFrom() {
		if (from != null && from.eIsProxy()) {
			InternalEObject oldFrom = (InternalEObject)from;
			from = (RequiresEdgesSource)eResolveProxy(oldFrom);
			if (from != oldFrom) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, WiresPackage.REQUIRES_EDGE__FROM, oldFrom, from));
			}
		}
		return from;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RequiresEdgesSource basicGetFrom() {
		return from;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetFrom(RequiresEdgesSource newFrom, NotificationChain msgs) {
		RequiresEdgesSource oldFrom = from;
		from = newFrom;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WiresPackage.REQUIRES_EDGE__FROM, oldFrom, newFrom);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setFrom(RequiresEdgesSource newFrom) {
		if (newFrom != from) {
			NotificationChain msgs = null;
			if (from != null)
				msgs = ((InternalEObject)from).eInverseRemove(this, UsersPackage.REQUIRES_EDGES_SOURCE__OUT_REQUIRES_EDGES, RequiresEdgesSource.class, msgs);
			if (newFrom != null)
				msgs = ((InternalEObject)newFrom).eInverseAdd(this, UsersPackage.REQUIRES_EDGES_SOURCE__OUT_REQUIRES_EDGES, RequiresEdgesSource.class, msgs);
			msgs = basicSetFrom(newFrom, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, WiresPackage.REQUIRES_EDGE__FROM, newFrom, newFrom));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RequiresEdgeDestination getTo() {
		if (to != null && to.eIsProxy()) {
			InternalEObject oldTo = (InternalEObject)to;
			to = (RequiresEdgeDestination)eResolveProxy(oldTo);
			if (to != oldTo) {
				if (eNotificationRequired())
					eNotify(new ENotificationImpl(this, Notification.RESOLVE, WiresPackage.REQUIRES_EDGE__TO, oldTo, to));
			}
		}
		return to;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public RequiresEdgeDestination basicGetTo() {
		return to;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public NotificationChain basicSetTo(RequiresEdgeDestination newTo, NotificationChain msgs) {
		RequiresEdgeDestination oldTo = to;
		to = newTo;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, WiresPackage.REQUIRES_EDGE__TO, oldTo, newTo);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setTo(RequiresEdgeDestination newTo) {
		if (newTo != to) {
			NotificationChain msgs = null;
			if (to != null)
				msgs = ((InternalEObject)to).eInverseRemove(this, UsersPackage.REQUIRES_EDGE_DESTINATION__IN_REQUIRES_EDGES, RequiresEdgeDestination.class, msgs);
			if (newTo != null)
				msgs = ((InternalEObject)newTo).eInverseAdd(this, UsersPackage.REQUIRES_EDGE_DESTINATION__IN_REQUIRES_EDGES, RequiresEdgeDestination.class, msgs);
			msgs = basicSetTo(newTo, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, WiresPackage.REQUIRES_EDGE__TO, newTo, newTo));
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public NotificationChain eInverseAdd(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case WiresPackage.REQUIRES_EDGE__GENERATED_BY:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getGeneratedBy()).basicAdd(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getOutConstraintEdges()).basicAdd(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES:
				return ((InternalEList<InternalEObject>)(InternalEList<?>)getInConstraintEdges()).basicAdd(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__FROM:
				if (from != null)
					msgs = ((InternalEObject)from).eInverseRemove(this, UsersPackage.REQUIRES_EDGES_SOURCE__OUT_REQUIRES_EDGES, RequiresEdgesSource.class, msgs);
				return basicSetFrom((RequiresEdgesSource)otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__TO:
				if (to != null)
					msgs = ((InternalEObject)to).eInverseRemove(this, UsersPackage.REQUIRES_EDGE_DESTINATION__IN_REQUIRES_EDGES, RequiresEdgeDestination.class, msgs);
				return basicSetTo((RequiresEdgeDestination)otherEnd, msgs);
		}
		return super.eInverseAdd(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs) {
		switch (featureID) {
			case WiresPackage.REQUIRES_EDGE__GENERATED_BY:
				return ((InternalEList<?>)getGeneratedBy()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES:
				return ((InternalEList<?>)getOutConstraintEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES:
				return ((InternalEList<?>)getInConstraintEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__WIRES:
				return ((InternalEList<?>)getWires()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES:
				return ((InternalEList<?>)getParameterEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES:
				return ((InternalEList<?>)getExtendsEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES:
				return ((InternalEList<?>)getRequiresEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES:
				return ((InternalEList<?>)getProvidesEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES:
				return ((InternalEList<?>)getConstraintEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__CONDITION_EDGES:
				return ((InternalEList<?>)getConditionEdges()).basicRemove(otherEnd, msgs);
			case WiresPackage.REQUIRES_EDGE__FROM:
				return basicSetFrom(null, msgs);
			case WiresPackage.REQUIRES_EDGE__TO:
				return basicSetTo(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object eGet(int featureID, boolean resolve, boolean coreType) {
		switch (featureID) {
			case WiresPackage.REQUIRES_EDGE__GENERATED_BY:
				return getGeneratedBy();
			case WiresPackage.REQUIRES_EDGE__IS_GENERATED:
				return isIsGenerated();
			case WiresPackage.REQUIRES_EDGE__ID:
				return getId();
			case WiresPackage.REQUIRES_EDGE__GENERATED_RULE:
				return getGeneratedRule();
			case WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES:
				return getOutConstraintEdges();
			case WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES:
				return getInConstraintEdges();
			case WiresPackage.REQUIRES_EDGE__WIRES:
				return getWires();
			case WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES:
				return getParameterEdges();
			case WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES:
				return getExtendsEdges();
			case WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES:
				return getRequiresEdges();
			case WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES:
				return getProvidesEdges();
			case WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES:
				return getConstraintEdges();
			case WiresPackage.REQUIRES_EDGE__CONDITION_EDGES:
				return getConditionEdges();
			case WiresPackage.REQUIRES_EDGE__FROM:
				if (resolve) return getFrom();
				return basicGetFrom();
			case WiresPackage.REQUIRES_EDGE__TO:
				if (resolve) return getTo();
				return basicGetTo();
		}
		return super.eGet(featureID, resolve, coreType);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@SuppressWarnings("unchecked")
	@Override
	public void eSet(int featureID, Object newValue) {
		switch (featureID) {
			case WiresPackage.REQUIRES_EDGE__GENERATED_BY:
				getGeneratedBy().clear();
				getGeneratedBy().addAll((Collection<? extends GeneratesElements>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__IS_GENERATED:
				setIsGenerated((Boolean)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__ID:
				setId((String)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__GENERATED_RULE:
				setGeneratedRule((String)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES:
				getOutConstraintEdges().clear();
				getOutConstraintEdges().addAll((Collection<? extends ConstraintEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES:
				getInConstraintEdges().clear();
				getInConstraintEdges().addAll((Collection<? extends ConstraintEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__WIRES:
				getWires().clear();
				getWires().addAll((Collection<? extends Wire>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES:
				getParameterEdges().clear();
				getParameterEdges().addAll((Collection<? extends ParameterEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES:
				getExtendsEdges().clear();
				getExtendsEdges().addAll((Collection<? extends ExtendsEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES:
				getRequiresEdges().clear();
				getRequiresEdges().addAll((Collection<? extends RequiresEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES:
				getProvidesEdges().clear();
				getProvidesEdges().addAll((Collection<? extends ProvidesEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES:
				getConstraintEdges().clear();
				getConstraintEdges().addAll((Collection<? extends ConstraintEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__CONDITION_EDGES:
				getConditionEdges().clear();
				getConditionEdges().addAll((Collection<? extends ConditionEdge>)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__FROM:
				setFrom((RequiresEdgesSource)newValue);
				return;
			case WiresPackage.REQUIRES_EDGE__TO:
				setTo((RequiresEdgeDestination)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void eUnset(int featureID) {
		switch (featureID) {
			case WiresPackage.REQUIRES_EDGE__GENERATED_BY:
				getGeneratedBy().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__IS_GENERATED:
				setIsGenerated(IS_GENERATED_EDEFAULT);
				return;
			case WiresPackage.REQUIRES_EDGE__ID:
				setId(ID_EDEFAULT);
				return;
			case WiresPackage.REQUIRES_EDGE__GENERATED_RULE:
				setGeneratedRule(GENERATED_RULE_EDEFAULT);
				return;
			case WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES:
				getOutConstraintEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES:
				getInConstraintEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__WIRES:
				getWires().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES:
				getParameterEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES:
				getExtendsEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES:
				getRequiresEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES:
				getProvidesEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES:
				getConstraintEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__CONDITION_EDGES:
				getConditionEdges().clear();
				return;
			case WiresPackage.REQUIRES_EDGE__FROM:
				setFrom((RequiresEdgesSource)null);
				return;
			case WiresPackage.REQUIRES_EDGE__TO:
				setTo((RequiresEdgeDestination)null);
				return;
		}
		super.eUnset(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean eIsSet(int featureID) {
		switch (featureID) {
			case WiresPackage.REQUIRES_EDGE__GENERATED_BY:
				return generatedBy != null && !generatedBy.isEmpty();
			case WiresPackage.REQUIRES_EDGE__IS_GENERATED:
				return isGenerated != IS_GENERATED_EDEFAULT;
			case WiresPackage.REQUIRES_EDGE__ID:
				return ID_EDEFAULT == null ? id != null : !ID_EDEFAULT.equals(id);
			case WiresPackage.REQUIRES_EDGE__GENERATED_RULE:
				return GENERATED_RULE_EDEFAULT == null ? generatedRule != null : !GENERATED_RULE_EDEFAULT.equals(generatedRule);
			case WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES:
				return outConstraintEdges != null && !outConstraintEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES:
				return inConstraintEdges != null && !inConstraintEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__WIRES:
				return wires != null && !wires.isEmpty();
			case WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES:
				return parameterEdges != null && !parameterEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES:
				return extendsEdges != null && !extendsEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES:
				return requiresEdges != null && !requiresEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES:
				return providesEdges != null && !providesEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES:
				return constraintEdges != null && !constraintEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__CONDITION_EDGES:
				return conditionEdges != null && !conditionEdges.isEmpty();
			case WiresPackage.REQUIRES_EDGE__FROM:
				return from != null;
			case WiresPackage.REQUIRES_EDGE__TO:
				return to != null;
		}
		return super.eIsSet(featureID);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eBaseStructuralFeatureID(int derivedFeatureID, Class<?> baseClass) {
		if (baseClass == ConstraintEdgesSource.class) {
			switch (derivedFeatureID) {
				case WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES: return WiresPackage.CONSTRAINT_EDGES_SOURCE__OUT_CONSTRAINT_EDGES;
				default: return -1;
			}
		}
		if (baseClass == ConstraintEdgeDestination.class) {
			switch (derivedFeatureID) {
				case WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES: return WiresPackage.CONSTRAINT_EDGE_DESTINATION__IN_CONSTRAINT_EDGES;
				default: return -1;
			}
		}
		if (baseClass == ContainsWires.class) {
			switch (derivedFeatureID) {
				case WiresPackage.REQUIRES_EDGE__WIRES: return ModelPackage.CONTAINS_WIRES__WIRES;
				case WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES: return ModelPackage.CONTAINS_WIRES__PARAMETER_EDGES;
				case WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES: return ModelPackage.CONTAINS_WIRES__EXTENDS_EDGES;
				case WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES: return ModelPackage.CONTAINS_WIRES__REQUIRES_EDGES;
				case WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES: return ModelPackage.CONTAINS_WIRES__PROVIDES_EDGES;
				case WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES: return ModelPackage.CONTAINS_WIRES__CONSTRAINT_EDGES;
				case WiresPackage.REQUIRES_EDGE__CONDITION_EDGES: return ModelPackage.CONTAINS_WIRES__CONDITION_EDGES;
				default: return -1;
			}
		}
		return super.eBaseStructuralFeatureID(derivedFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public int eDerivedStructuralFeatureID(int baseFeatureID, Class<?> baseClass) {
		if (baseClass == ConstraintEdgesSource.class) {
			switch (baseFeatureID) {
				case WiresPackage.CONSTRAINT_EDGES_SOURCE__OUT_CONSTRAINT_EDGES: return WiresPackage.REQUIRES_EDGE__OUT_CONSTRAINT_EDGES;
				default: return -1;
			}
		}
		if (baseClass == ConstraintEdgeDestination.class) {
			switch (baseFeatureID) {
				case WiresPackage.CONSTRAINT_EDGE_DESTINATION__IN_CONSTRAINT_EDGES: return WiresPackage.REQUIRES_EDGE__IN_CONSTRAINT_EDGES;
				default: return -1;
			}
		}
		if (baseClass == ContainsWires.class) {
			switch (baseFeatureID) {
				case ModelPackage.CONTAINS_WIRES__WIRES: return WiresPackage.REQUIRES_EDGE__WIRES;
				case ModelPackage.CONTAINS_WIRES__PARAMETER_EDGES: return WiresPackage.REQUIRES_EDGE__PARAMETER_EDGES;
				case ModelPackage.CONTAINS_WIRES__EXTENDS_EDGES: return WiresPackage.REQUIRES_EDGE__EXTENDS_EDGES;
				case ModelPackage.CONTAINS_WIRES__REQUIRES_EDGES: return WiresPackage.REQUIRES_EDGE__REQUIRES_EDGES;
				case ModelPackage.CONTAINS_WIRES__PROVIDES_EDGES: return WiresPackage.REQUIRES_EDGE__PROVIDES_EDGES;
				case ModelPackage.CONTAINS_WIRES__CONSTRAINT_EDGES: return WiresPackage.REQUIRES_EDGE__CONSTRAINT_EDGES;
				case ModelPackage.CONTAINS_WIRES__CONDITION_EDGES: return WiresPackage.REQUIRES_EDGE__CONDITION_EDGES;
				default: return -1;
			}
		}
		return super.eDerivedStructuralFeatureID(baseFeatureID, baseClass);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public String toString() {
		if (eIsProxy()) return super.toString();

		StringBuffer result = new StringBuffer(super.toString());
		result.append(" (isGenerated: ");
		result.append(isGenerated);
		result.append(", id: ");
		result.append(id);
		result.append(", generatedRule: ");
		result.append(generatedRule);
		result.append(')');
		return result.toString();
	}

} //RequiresEdgeImpl

«IMPORT iaml»

/**
 * Code behind Permissions.
 *
 */
«EXTENSION template::GeneratorExtensions»

«DEFINE permissionChecks FOR model::users::Role»
	«REM»all permission types for this role«ENDREM»
	«EXPAND addPermission FOREACH eAllContents.typeSelect(model::users::Permission)»
	«EXPAND removePermission FOREACH eAllContents.typeSelect(model::users::Permission)»
«ENDDEFINE»

«DEFINE addPermission FOR model::users::Permission»
/**
 * Add the permission '«name»'.
 *
 * Returns true if successful.
 */
function add_permission_«safeName()»($iterator) {
	$iterator->getAttributeInstance(Permission_«safeName()»::getInstance())->setValue(true);
	$iterator->save();
	return true;
}
«ENDDEFINE»

«DEFINE removePermission FOR model::users::Permission»
/**
 * Remove the permission '«name»'.
 *
 * Returns true if successful.
 *
 * @implementation UserInstance
 *		When a {@model Role} is removed from a {@model UserInstance}, the {@model UserInstance}
 *		is reloaded explicitly.
 */
function remove_permission_«safeName()»($iterator) {
	// reload explicitly
	$iterator->reload();
	
	$iterator->getAttributeInstance(Permission_«safeName()»::getInstance())->setValue(false);
	$iterator->save();
	return true;
}
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»
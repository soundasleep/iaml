«IMPORT iaml»

/**
 * Common event handlers for visual elements.
 */
«EXTENSION template::GeneratorExtensions»

«DEFINE getInlineClickJavascript(model::visual::Frame currentFrame) FOR model::VisibleThing-»
	onClick="return onClick_«safeNameString(id)»<?php echo «EXPAND template::visual::Label::getIteratorListIndex»; ?>(this);"
«ENDDEFINE»
«DEFINE getInlineChangeJavascript(model::visual::Frame currentFrame) FOR model::VisibleThing-»
	onChange="return onChange_«safeNameString(id)»<?php echo «EXPAND template::visual::Label::getIteratorListIndex»; ?>(this);"
«ENDDEFINE»

«DEFINE getScriptClickDefinition(model::visual::Frame currentFrame) FOR model::VisibleThing-»
	<script language="Javascript" type="application/javascript">
	/* <![CDATA[ */
		function onClick_«safeNameString(id)»<?php echo «EXPAND template::visual::Label::getIteratorListIndex»; ?>(obj) {
			«EXPAND visibleThingClickEvents(currentFrame, false)»
			return false;
		}
	/* ]]> */
	</script>
«ENDDEFINE»

«DEFINE visibleThingClickEvents(model::visual::Frame currentFrame, Boolean php) FOR model::VisibleThing-»
	«IF onClick != null»
		// expand all onClicks
		«EXPAND template::events::EventCall::callEvent(php) FOR onClick-»
	«ENDIF»

	// implicit operations
	«EXPAND implicitButtonClickEvents(currentFrame, php) FOREACH outWires-»
	«EXPAND anyActionImplicitButtonClickEvents(currentFrame, php) FOR this»
«ENDDEFINE»

/**
 * We cannot cast VisibleThing to ActionSource, so we have to do it at runtime.
 */
«DEFINE anyActionImplicitButtonClickEvents(model::visual::Frame currentFrame, Boolean php) FOR emf::EObject»	
	// this VisibleThing is not an ActionSource
«ENDDEFINE»
«DEFINE anyActionImplicitButtonClickEvents(model::visual::Frame currentFrame, Boolean php) FOR model::ActionEdgeSource»
	«EXPAND implicitButtonClickEvents(currentFrame, php) FOREACH listeners.sortBy(e|-e.priority)-»
«ENDDEFINE»

«DEFINE getScriptChangeDefinition(model::visual::Frame currentFrame) FOR model::VisibleThing-»
	<script language="Javascript" type="application/javascript">
	/* <![CDATA[ */
		function onChange_«safeNameString(id)»<?php echo «EXPAND template::visual::Label::getIteratorListIndex»; ?>(obj) {
			«IF onChange != null»
				// expand all onChanges
				«EXPAND template::events::EventCall::callEvent(false) FOR onChange-»
			«ENDIF»
		
			return false;
		}
	/* ]]> */
	</script>
«ENDDEFINE»

/**
 * If buttons have a NavigateAction or RunAction called onClick,
 * execute them as if there was an EventTrigger that existed.
 */
«DEFINE implicitButtonClickEvents(model::visual::Frame currentFrame, Boolean php) FOR model::Wire»
«ENDDEFINE»

«DEFINE implicitButtonClickEvents(model::visual::Frame currentFrame, Boolean php) FOR model::ECARule»
	«IF (name == "click" || name == "onClick")»
		/* expanding implicit trigger (run) */
		«EXPAND template::operations::OperationCall::callOperation(php, false) FOR this»
	«ENDIF» 
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»

«IMPORT iaml»

/**
 * Rendering visual elements.
 */
«EXTENSION template::GeneratorExtensions»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::VisibleThing-»
	«throwException("Cannot render abstract visible thing: " + this)»
«ENDDEFINE»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::visual::InputForm-»
	«EXPAND InputForm::renderForm(currentFrame) FOR this-»
«ENDDEFINE»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::visual::InputTextField-»
	«EXPAND InputTextField::renderTextField(currentFrame) FOR this-»
«ENDDEFINE»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::visual::Button-»
	«EXPAND Button::renderButton(currentFrame) FOR this-»
«ENDDEFINE»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::visual::Label-»
	«EXPAND Label::renderLabel(currentFrame) FOR this-»
«ENDDEFINE»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::visual::Map-»
	«EXPAND Map::renderMap(currentFrame) FOR this-»
«ENDDEFINE»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::visual::MapPoint-»
	«EXPAND MapPoint::renderMapPoint(currentFrame) FOR this-»
«ENDDEFINE»

«DEFINE renderVisual(model::visual::Frame currentFrame) FOR model::visual::IteratorList-»
	«EXPAND IteratorList::renderIteratorList(currentFrame) FOR this-»
«ENDDEFINE»

/**
 * Get the current 'value' of the given VisibleThing, into the given
 * argument name.
 * Assumed to be in PHP mode.
 * If there is no current fieldValue, then the argument <em>must not be set</em>.
 */
«DEFINE getFieldValue(model::visual::Frame currentFrame, String argName) FOR model::VisibleThing»
	«throwException("Cannot get field value of abstract visible thing: " + this)»
«ENDDEFINE»

«DEFINE getFieldValue(model::visual::Frame currentFrame, String argName) FOR model::visual::Label»
	«EXPAND template::visual::Label::getLabelFieldValue(currentFrame, argName) FOR this»
«ENDDEFINE»

/**
 * The 'value' of a Button is the <em>absolute</em> URL that it will navigate to, if it is clicked.
 *
 * @implementation Frame
 *		An RSS 2.0 {@model Frame} will lose {@model Session} parameters passed as part of {@model Button links};
 *		i.e. <code>PHPSESSID</code> will not be included in URLs.
 */
«DEFINE getFieldValue(model::visual::Frame currentFrame, String argName) FOR model::visual::Button»
	«EXPAND template::visual::Button::getButtonLinkValue(currentFrame, argName, true, false) FOR this»
«ENDDEFINE»

/**
 * We are currently in a HTML tag - should the current element be hidden?
 */
«DEFINE getVisibilityInlineCode(model::visual::Frame currentFrame) FOR model::VisibleThing»
	<?php
	$found_visible_value = false;
	$visible_value = null;
	 
	«REM»first, go through all properties«ENDREM»	
	«FOREACH properties.select(p|p.name == "visible") AS p»
		if (!$found_visible_value && «EXPAND template::operations::Parameters::isSetParameter(true) FOR p») {
			$visible_value = make_into_boolean(«EXPAND template::operations::Parameters::callParameterValue(true, false) FOR p»);
			$found_visible_value = true;
		}
	«ENDFOREACH»
	
	«REM»then revert back to the attribute«ENDREM»
	if (!$found_visible_value) {
		// default attribute
		$visible_value = «IF visible»true«ELSE»false«ENDIF»;
	}
	
	if (!$visible_value) {
		echo 'style="display: none;" ';
	}
	?>
«ENDDEFINE»


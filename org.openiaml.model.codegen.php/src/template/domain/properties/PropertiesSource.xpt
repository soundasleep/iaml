«IMPORT iaml»

/**
 * Get values from a .properties file.
 */
«EXTENSION template::GeneratorExtensions»

/**
 * Called from JS.
 */
«DEFINE remotePropertiesValue(boolean require, model::Property property) FOR model::DomainAttribute»
	<?php 
		// remote parameter source from a .properties file
		$db_type = "FileDomainObject";
		«IF model::DomainStore.isInstance(getDomainStore(this))»
			$db_name = "«getDomainStore(this).file-»";
		«ELSEIF model::InternetApplication.isInstance(getDomainStore(this))»
			$db_name = "internet_application.properties";
		«ELSE»
			«throwException("Remote parameter source '" + getDomainStore(this) + "' was not a DomainStore or InternetApplication.")»
		«ENDIF»
		$row_name = "«safeNameString(this.name)-»";
		$properties = load_properties(ROOT_PATH . $db_name);
		$value = get_property($properties, $row_name, null);
		«IF require»
			// the value is required
			if ($value === null) {
				throw new IamlRuntimeException("Could not fetch row '$row_name' from properties database '$db_name': no results found");
			}
		«ENDIF»
		if ($value !== null) {
			echo "\"" . htmlspecialchars($value) . "\"";
		} else {
			echo "null";	/* signifies that we shouldn't change anything */
		} 
	?>
«ENDDEFINE»

/**
 * Called from JS.
 */
«DEFINE remotePropertiesValueIsSet(model::Property property) FOR model::DomainAttribute»
	<?php 
		// remote parameter source from a .properties file
		$db_type = "FileDomainObject";
		«IF model::DomainStore.isInstance(getDomainStore(this))»
			$db_name = "«getDomainStore(this).file-»";
		«ELSEIF model::InternetApplication.isInstance(getDomainStore(this))»
			$db_name = "internet_application.properties";
		«ELSE»
			«throwException("Remote parameter source '" + getDomainStore(this) + "' was not a DomainStore or InternetApplication.")»
		«ENDIF»
		$row_name = "«safeNameString(this.name)-»";
		$properties = load_properties(ROOT_PATH . $db_name);
		$value = get_property($properties, $row_name, null);
		if ($value !== null) {
			echo "true";
		} else {
			echo "false";
		} 
	?>
«ENDDEFINE»

«IMPORT iaml»

«EXTENSION template::GeneratorExtensions»

«DEFINE main FOR model::InternetApplication»
	«EXPAND Page::expandPage FOREACH children»

	«EXPAND expandSession FOREACH sessions»
	
	«REM»create a sitemap«ENDREM»
	«FILE "output/sitemap.html"»
		<html>
		<head>
			<title>web application '«pageTitle()»': sitemap</title>
			<link rel="stylesheet" type="text/css" href="default.css" />
		</head>
		
		<body>
		<h1>Sitemap</h1>
		<ol>
			«EXPAND expandSitemapPage FOREACH children»
			
			«EXPAND expandSitemapPage FOREACH sessions»
		</ol>
		</body>
		</html>
	«ENDFILE»

	«REM»create other files manually«ENDREM»
	«FILE "output/default.css"»«EXPAND css::DefaultCss::defaultCss»«ENDFILE»
	
	«FILE "output/site_layout.xml"-»«EXPAND xml::SiteLayout::siteLayout-»«ENDFILE-»

	«FILE "output/js/prototype.js"»«EXPAND js::includes::PrototypeJs::prototypeJs»«ENDFILE»
	«FILE "output/default.js"»«EXPAND js::includes::DefaultJs::defaultJs»«ENDFILE»

	«FILE "output/store_event.php"»«EXPAND php::includes::StoreEventsPhp::storeEventsPhp»«ENDFILE»
	«FILE "output/store_db.php"»«EXPAND php::includes::StoreDbPhp::storeDbPhp»«ENDFILE»
	«FILE "output/set_session.php"»«EXPAND php::includes::SetSessionPhp::setSessionPhp»«ENDFILE»
	«FILE "output/set_application_value.php"»«EXPAND php::includes::SetApplicationValuePhp::setApplicationValuePhp»«ENDFILE»
	«FILE "output/clear_session.php"»«EXPAND php::includes::ClearSessionPhp::clearSessionPhp»«ENDFILE»
	«FILE "output/properties_file.php"»«EXPAND php::includes::PropertiesFilePhp::propertiesFilePhp»«ENDFILE»
	«FILE "output/call_remote_event.php"»«EXPAND php::includes::CallRemoteEvent::callRemoteEvent»«ENDFILE»

	«FILE "output/create_database.php"-»
<?php
«EXPAND php::CreateDomainStorePhp::createDomainStorePhp FOREACH domainStores-»
«EXPAND php::CreateDomainStorePhp::createDomainObjectPhp_Root FOREACH children-»

$trace = array();
function store_db($attribute_id, $arg0) {
	global $trace;
	// have we already called this store_event? if so, bail
	if (in_array($attribute_id, $trace)) {
		log_message("breaking out of possibly infinite store_db loop: $attribute_id");
		return;
	}

	/*
	 * a simple solution (but not scalable TODO): create a new HTTP request to store the event.
	 * a better solution is obiously to store the new event in this same page.
	 */
	$url = get_baseurl() . "/store_db.php?attribute_id=".urlencode($attribute_id)."&arg0=".urlencode($arg0)."&trace=".urlencode(implode(",", $trace));
	log_message("store_db.php calling $url");
	$r = file_get_contents($url);
	if ($r != "ok")
		local_die("store_db failed: " + $r);

	return true;
}

	«ENDFILE»
«ENDDEFINE»

/* expand sessions as if they weren't there */
«DEFINE expandSession FOR model::scopes::Session»
	«EXPAND Page::expandPage FOREACH children»
«ENDDEFINE»

/* default = nothing */
«DEFINE expandSitemapPage FOR model::ApplicationElement»
«ENDDEFINE»

«DEFINE expandSitemapPage FOR model::visual::Page»
<li>
	<a href="«safeNameString(id)».php">«name»</a>
</li>
«ENDDEFINE»

«DEFINE expandSitemapPage FOR model::scopes::Session»
<li>
	[Session «name»]
	<ol>
		«EXPAND expandSitemapPage FOREACH children»
	</ol>
</li>
«ENDDEFINE»

/** 
 * a hack way to create backtrace-able errors
 * based on http://www.openarchitectureware.org/forum/viewtopic.php?showtopic=5540  
 */
«DEFINE exception FOR Object»
«ENDDEFINE»

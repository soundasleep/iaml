«IMPORT iaml»

/**
 * Visually rendering a text field.
 */
«EXTENSION template::GeneratorExtensions»

«DEFINE renderTextField FOR model::visual::InputTextField-»
	<div>
	<label id="label_«safeNameString(id)-»">
		«textFieldName()»
		
		<input type="text" id="«safeNameString(id)»" name="«safeNameString(id)»"
			onChange="return onChange_«safeNameString(id)»(this);"
			onClick="return onClick_«safeNameString(id)»(this);"

			«REM»any initial values?«ENDREM»
			«EXPAND getInitialValuesSetWire FOREACH inEdges.typeSelect(model::wires::SetWire)» 			 
			«EXPAND getInitialValuesSyncWire FOREACH inEdges.typeSelect(model::wires::SyncWire)» 
			«EXPAND getInitialValuesSyncWire FOREACH outEdges.typeSelect(model::wires::SyncWire)» 			 

			«REM»
				an initial value?
				TODO we could have multiple default values; right now we are relying on
				browser behaviour to place this value as lower priority. we should work
				out some way to select it programatically.
			«ENDREM»
			«EXPAND staticInitialValue FOREACH properties.select( e | e.name == "fieldValue")»			
		>
		
		<script language="Javascript" type="application/javascript">
		/* <![CDATA[ */
			function onChange_«safeNameString(id)»(obj) {
				// expand all onChanges
				«EXPAND template::events::EventCall::callEvent(false) FOREACH eventTriggers.select(e | e.name == "edit")-»

				// outgoing values
				«REM»any application element properties to change? (both on client and server)«ENDREM»
				«EXPAND template::operations::OutgoingValues::outgoingValues(this) FOREACH outEdges»
				«EXPAND template::operations::OutgoingValues::outgoingValues(this) FOREACH inEdges»
				«REM»it may be required to outgoingValues(this) FOREACH properties.outEdges«ENDREM»
				
				// server values
				«REM»save a value for myself (which is not covered by an outEdge/inEdge) to the server/session?«ENDREM»
				«EXPAND template::operations::OutgoingValues::outgoingValue(this) FOREACH properties.select( e | e.name == "fieldValue")»
				
				return false;
			}
			
			function onClick_«safeNameString(id)»(obj) {
				// expand all onClicks
				«EXPAND template::events::EventCall::callEvent(false) FOREACH eventTriggers.select(e | e.name == "click" || e.name == "onClick")-»
							
				return false;
			}
			
			«REM»any on-access events?«ENDREM»
			addOnloadFunction( function() {
				«EXPAND template::events::EventCall::callEvent(false) FOREACH eventTriggers.select(e | e.name == "access")-»				
			} );
		/* ]]> */
		</script>
	</label>
	</div>
«ENDDEFINE»

/* if it connects to a SyncWire that is an ApplicationElementProperty, use this
   property as the value */
«DEFINE getInitialValuesSyncWire FOR model::wires::SyncWire»
	«EXPAND staticInitialValue FOR from»
	«EXPAND staticInitialValue FOR to»
«ENDDEFINE»

/* if it connects to a SetWire that is an ApplicationElementProperty, use this
   property as the value */
«DEFINE getInitialValuesSetWire FOR model::wires::SetWire»
	«EXPAND staticInitialValue FOR from»
«ENDDEFINE»

/* ignore these sources */
«DEFINE staticInitialValue FOR model::WireEdgesSource»
«ENDDEFINE»
«DEFINE staticInitialValue FOR model::WireEdgeDestination»
«ENDDEFINE»

/* we have a property to provide [in PHP] */
«DEFINE staticInitialValue FOR model::ApplicationElementProperty»
	«IF containingSession(this) == null»
		«REM»contained in a Page or InternetApplication: a static value«ENDREM»
		value="<?php echo htmlspecialchars(get_application_value("«safeNameString(id)»", "«escapeString(defaultValue)»")); ?>"
	«ELSE»
		«REM»contained in a Session: a session value«ENDREM»
		value="<?php echo htmlspecialchars(require_session("«safeName(containingSession(this))»_«safeNameString(id)»", "«escapeString(defaultValue)»")); ?>"
	«ENDIF»
«ENDDEFINE»

«DEFINE staticInitialValue FOR model::DomainAttributeInstance»
	«REM»from a domain attribute instance.«ENDREM»
	value="<?php echo htmlspecialchars(get_attribute_instance_«safeName()»()); ?>"
«ENDDEFINE»

«DEFINE staticInitialValue FOR model::QueryParameter»
	«REM»from the query«ENDREM»
	value="<?php echo «EXPAND template::operations::Parameters::callParameterValue(true, null, false)»; ?>"
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»

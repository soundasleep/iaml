«IMPORT iaml»

«EXTENSION template::GeneratorExtensions»

«DEFINE callRemoteEvent FOR model::InternetApplication-»
<?php
/**
 * Call a remote event.
 */
 
«EXPAND template::Template::commonHeader("")»

// include operations, condition definitions
«EXPAND template::Common::commonPHPIncludes»

log_message("call_remote_event.php? " . print_r($_GET, true));
$container = require_get("container");
$operation_name = require_get("operation_name");
$arg0 = require_get("arg0");
$arg1 = require_get("arg1");
$running = require_get("running", "");	// optional stacktrace

// the current frame ID we are on
// (used to select which elements to inform the client to update)
$frame_id = require_get("frame");

/* check to make sure it's in an existing frame */
$existing_frames = array(
	«EXPAND allFrameNames FOREACH getAllFrames() SEPARATOR ", "»
);
if (!isset($existing_frames[$container])) {
	throw new IamlRuntimeException("Container '$container' was not found in existing frames.");
}

/* let's call it through a HTTP request */
$url = get_request_base() . "/" . $existing_frames[$container];

// copy over session parameters
// session ID needs to come *first* in the URL parameter list
$url .= "?" . get_sid();		// directly from PHP, so we don't need to set session_id() ourselves

// rest of url
$url .= "&operation=" . urlencode($operation_name) . "&arg0=" . urlencode($arg0) . "&arg1=" . urlencode($arg1) . "&running=" . urlencode($running);

log_message("Remote call to: $url");

// stop current session: the default PHP session handler blocks to prevent concurrent access
$old_id = session_id();
session_write_close();

$result = file_get_contents($url);

// restart the session once complete
session_id($old_id);
session_start();

if (strpos(strtolower($result), "Fatal error") !== false) {
	// TODO add test case to make sure we will catch this exception
	throw new IamlRuntimeException("Remote call to '$url' failed: Fatal error.", $result);
} 
if (strpos(strtolower($result), "Warning") !== false) {
	// TODO add test case to make sure we will catch this exception
	throw new IamlRuntimeException("Remote call to '$url' failed: Warning.", $result);
} 
echo $result;

// update any values on the client-side?
«EXPAND template::php::callbacks::UpdateFrameProperties::updateAllFrameProperties»

log_message("call_remote_event.php complete");

«ENDDEFINE»

«DEFINE allFrameNames FOR model::visual::Frame»
	"«safeName()-»" => "«safeNameString(id)-».php"
«ENDDEFINE»

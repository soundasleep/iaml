«IMPORT iaml»

«EXTENSION template::GeneratorExtensions»

«DEFINE createDomainStorePhp FOR model::DomainStore»
	// DomainStore «type» "«name»"
	«IF isPropertiesFile(this)»
		«EXPAND createDomainStoreProperties FOR this»
	«ELSE»
		«EXPAND createDomainStoreDatabase FOR this»
	«ENDIF»
«ENDDEFINE»

/**
 * PHP code for creating the domain store.
 */
«DEFINE createDomainStoreDatabase FOR model::DomainStore»
	// first, make sure the table exists
	$db = new PDO('sqlite:«safeName()».db') or throw_new_IamlRuntimeException("could not open db '«safeName()».db'");
	
	// now cycle through all DomainObjects in this DomainStore to create each of them
	«EXPAND createDomainObjectDatabase FOREACH children»

	// sole attributes
	«IF attributes.size > 0»
		$s = $db->prepare("SELECT * FROM single_values");
		if (!$s) {
			// create the table
			$q = $db->query("CREATE TABLE single_values (
					«EXPAND createDomainAttributeDatabase FOREACH attributes SEPARATOR ", "»
				);") or throw_new_IamlRuntimeException("could not create single_values table: " . print_r($db->errorInfo(), true));
		}	
	«ENDIF»
	
	// close connection
	$db = null;
«ENDDEFINE»

«DEFINE createDomainStoreProperties FOR model::DomainStore»
	// we don't need to create anything, it is handled automatically
«ENDDEFINE»

/**
 * Expand a DomainObject into a SQL table.
 */ 
«DEFINE createDomainObjectDatabase FOR model::DomainObject»
	$s = $db->prepare("SELECT * FROM «safeNameString(name)»");
	if (!$s) {
		// create the table
		$q = $db->query("CREATE TABLE «safeNameString(name)» (
				«REM»(except for attributes which are extensions of non-primary key attributes)«ENDREM»
				«EXPAND createDomainAttributeDatabase FOREACH attributes.select(a | a.outExtendsEdges.size == 0 || a.outExtendsEdges.to.typeSelect(model::DomainAttribute).select(a | a.primaryKey).size > 0) SEPARATOR ", "»
			);") or throw_new_IamlRuntimeException("could not create table: " . print_r($db->errorInfo(), true));
	}
«ENDDEFINE»

/* if an InternetApplication directly contains an AbstractObject,
   we still process it anyway. we will assume it is stored
   inside a database. */
«DEFINE createDomainObjectPhp_Root FOR model::ApplicationElement»
«ENDDEFINE»

«DEFINE createDomainObjectPhp_Root FOR model::DomainObject»
	// first, make sure the table exists
	$db = new PDO('sqlite:internet_application.db') or throw_new_IamlRuntimeException("could not open db '«safeName()».db'");
	
	// now cycle through this DomainObject
	«EXPAND createDomainObjectDatabase FOR this»
	
	// close connection
	$db = null;
«ENDDEFINE»

«DEFINE createDomainObjectProperties_Root FOR model::DomainObject»
	// we don't need to create anything, it is handled automatically
«ENDDEFINE»

/**
 * Expand a DomainAttribute into a SQL row.
 */
«DEFINE createDomainAttributeDatabase FOR model::DomainAttribute»
	«safeNameString(name)»
	«IF primaryKey»
		INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT 
	«ELSE»
		VARCHAR(255) NULL
	«ENDIF»
«ENDDEFINE»

«DEFINE exception FOR Object»
«ENDDEFINE»